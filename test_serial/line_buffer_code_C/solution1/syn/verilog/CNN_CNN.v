// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="CNN_CNN,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flga2104-2-i,HLS_INPUT_CLOCK=6.660000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.503000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=220,HLS_SYN_DSP=0,HLS_SYN_FF=76810,HLS_SYN_LUT=68815,HLS_VERSION=2019_2}" *)

module CNN_CNN (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        padding,
        width,
        hight,
        image_r,
        output_conv1_i,
        output_conv1_o,
        output_conv1_o_ap_vld,
        output_pooling1_i,
        output_pooling1_o,
        output_pooling1_o_ap_vld,
        output_conv2_i,
        output_conv2_o,
        output_conv2_o_ap_vld,
        output_pooling2_i,
        output_pooling2_o,
        output_pooling2_o_ap_vld,
        output_conv3_i,
        output_conv3_o,
        output_conv3_o_ap_vld,
        output_pooling3_i,
        output_pooling3_o,
        output_pooling3_o_ap_vld,
        output_conv4_i,
        output_conv4_o,
        output_conv4_o_ap_vld,
        output_upsampling1_i,
        output_upsampling1_o,
        output_upsampling1_o_ap_vld,
        output_conv5_i,
        output_conv5_o,
        output_conv5_o_ap_vld,
        output_upsampling2_i,
        output_upsampling2_o,
        output_upsampling2_o_ap_vld,
        output_conv6_i,
        output_conv6_o,
        output_conv6_o_ap_vld,
        output_upsampling3_i,
        output_upsampling3_o,
        output_upsampling3_o_ap_vld,
        output_conv7,
        output_conv7_ap_vld
);

parameter    ap_ST_fsm_state1 = 38'd1;
parameter    ap_ST_fsm_state2 = 38'd2;
parameter    ap_ST_fsm_state3 = 38'd4;
parameter    ap_ST_fsm_state4 = 38'd8;
parameter    ap_ST_fsm_state5 = 38'd16;
parameter    ap_ST_fsm_pp0_stage0 = 38'd32;
parameter    ap_ST_fsm_state8 = 38'd64;
parameter    ap_ST_fsm_state9 = 38'd128;
parameter    ap_ST_fsm_state10 = 38'd256;
parameter    ap_ST_fsm_state11 = 38'd512;
parameter    ap_ST_fsm_state12 = 38'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 38'd2048;
parameter    ap_ST_fsm_state15 = 38'd4096;
parameter    ap_ST_fsm_state16 = 38'd8192;
parameter    ap_ST_fsm_state17 = 38'd16384;
parameter    ap_ST_fsm_state18 = 38'd32768;
parameter    ap_ST_fsm_state19 = 38'd65536;
parameter    ap_ST_fsm_pp2_stage0 = 38'd131072;
parameter    ap_ST_fsm_state22 = 38'd262144;
parameter    ap_ST_fsm_state23 = 38'd524288;
parameter    ap_ST_fsm_state24 = 38'd1048576;
parameter    ap_ST_fsm_state25 = 38'd2097152;
parameter    ap_ST_fsm_state26 = 38'd4194304;
parameter    ap_ST_fsm_state27 = 38'd8388608;
parameter    ap_ST_fsm_state28 = 38'd16777216;
parameter    ap_ST_fsm_state29 = 38'd33554432;
parameter    ap_ST_fsm_state30 = 38'd67108864;
parameter    ap_ST_fsm_state31 = 38'd134217728;
parameter    ap_ST_fsm_state32 = 38'd268435456;
parameter    ap_ST_fsm_state33 = 38'd536870912;
parameter    ap_ST_fsm_state34 = 38'd1073741824;
parameter    ap_ST_fsm_state35 = 38'd2147483648;
parameter    ap_ST_fsm_state36 = 38'd4294967296;
parameter    ap_ST_fsm_state37 = 38'd8589934592;
parameter    ap_ST_fsm_state38 = 38'd17179869184;
parameter    ap_ST_fsm_state39 = 38'd34359738368;
parameter    ap_ST_fsm_state40 = 38'd68719476736;
parameter    ap_ST_fsm_state41 = 38'd137438953472;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] padding;
input  [31:0] width;
input  [31:0] hight;
input  [63:0] image_r;
input  [63:0] output_conv1_i;
output  [63:0] output_conv1_o;
output   output_conv1_o_ap_vld;
input  [63:0] output_pooling1_i;
output  [63:0] output_pooling1_o;
output   output_pooling1_o_ap_vld;
input  [63:0] output_conv2_i;
output  [63:0] output_conv2_o;
output   output_conv2_o_ap_vld;
input  [63:0] output_pooling2_i;
output  [63:0] output_pooling2_o;
output   output_pooling2_o_ap_vld;
input  [63:0] output_conv3_i;
output  [63:0] output_conv3_o;
output   output_conv3_o_ap_vld;
input  [63:0] output_pooling3_i;
output  [63:0] output_pooling3_o;
output   output_pooling3_o_ap_vld;
input  [63:0] output_conv4_i;
output  [63:0] output_conv4_o;
output   output_conv4_o_ap_vld;
input  [63:0] output_upsampling1_i;
output  [63:0] output_upsampling1_o;
output   output_upsampling1_o_ap_vld;
input  [63:0] output_conv5_i;
output  [63:0] output_conv5_o;
output   output_conv5_o_ap_vld;
input  [63:0] output_upsampling2_i;
output  [63:0] output_upsampling2_o;
output   output_upsampling2_o_ap_vld;
input  [63:0] output_conv6_i;
output  [63:0] output_conv6_o;
output   output_conv6_o_ap_vld;
input  [63:0] output_upsampling3_i;
output  [63:0] output_upsampling3_o;
output   output_upsampling3_o_ap_vld;
output  [63:0] output_conv7;
output   output_conv7_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] output_conv1_o;
reg output_conv1_o_ap_vld;
reg[63:0] output_pooling1_o;
reg output_pooling1_o_ap_vld;
reg[63:0] output_conv2_o;
reg output_conv2_o_ap_vld;
reg[63:0] output_pooling2_o;
reg output_pooling2_o_ap_vld;
reg[63:0] output_conv3_o;
reg output_conv3_o_ap_vld;
reg[63:0] output_pooling3_o;
reg output_pooling3_o_ap_vld;
reg[63:0] output_conv4_o;
reg output_conv4_o_ap_vld;
reg[63:0] output_upsampling1_o;
reg output_upsampling1_o_ap_vld;
reg[63:0] output_conv5_o;
reg output_conv5_o_ap_vld;
reg[63:0] output_upsampling2_o;
reg output_upsampling2_o_ap_vld;
reg[63:0] output_conv6_o;
reg output_conv6_o_ap_vld;
reg[63:0] output_upsampling3_o;
reg output_upsampling3_o_ap_vld;

(* fsm_encoding = "none" *) reg   [37:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [30:0] j_reg_376;
reg   [30:0] j_1_reg_409;
reg   [30:0] j_2_reg_442;
wire   [30:0] empty_fu_705_p1;
reg   [30:0] empty_reg_1377;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln116_fu_710_p2;
reg   [0:0] icmp_ln116_reg_1415;
wire   [0:0] cmp27_i_fu_716_p2;
reg   [0:0] cmp27_i_reg_1419;
reg   [63:0] output_conv1_read_reg_1423;
wire   [63:0] bitcast_ln120_fu_722_p1;
reg   [63:0] bitcast_ln120_reg_1428;
wire   [0:0] icmp_ln127_1_fu_730_p2;
reg   [0:0] icmp_ln127_1_reg_1435;
wire   [4:0] add_ln115_fu_742_p2;
reg   [4:0] add_ln115_reg_1443;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln115_fu_736_p2;
wire   [0:0] icmp_ln116_1_fu_752_p2;
wire    ap_CS_fsm_state5;
wire   [30:0] add_ln116_fu_757_p2;
reg   [30:0] add_ln116_reg_1463;
wire   [0:0] cmp17_i_fu_767_p2;
reg   [0:0] cmp17_i_reg_1468;
wire   [0:0] icmp_ln117_fu_776_p2;
reg   [0:0] icmp_ln117_reg_1472;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [30:0] add_ln117_fu_781_p2;
reg   [30:0] add_ln117_reg_1476;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln123_fu_791_p2;
reg   [0:0] icmp_ln123_reg_1481;
reg   [63:0] max_val_load_reg_1485;
wire   [0:0] icmp_ln127_fu_809_p2;
reg   [0:0] icmp_ln127_reg_1492;
reg   [63:0] output_conv2_read_reg_1497;
wire    ap_CS_fsm_state10;
wire   [63:0] bitcast_ln120_1_fu_881_p1;
reg   [63:0] bitcast_ln120_1_reg_1502;
wire   [0:0] icmp_ln127_5_fu_889_p2;
reg   [0:0] icmp_ln127_5_reg_1509;
wire   [3:0] add_ln115_1_fu_901_p2;
reg   [3:0] add_ln115_1_reg_1517;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln115_1_fu_895_p2;
wire   [0:0] icmp_ln116_2_fu_911_p2;
wire    ap_CS_fsm_state12;
wire   [30:0] add_ln116_1_fu_916_p2;
reg   [30:0] add_ln116_1_reg_1537;
wire   [0:0] cmp17_i17_fu_926_p2;
reg   [0:0] cmp17_i17_reg_1542;
wire   [0:0] icmp_ln117_1_fu_935_p2;
reg   [0:0] icmp_ln117_1_reg_1546;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state13_pp1_stage0_iter0;
wire    ap_block_state14_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [30:0] add_ln117_1_fu_940_p2;
reg   [30:0] add_ln117_1_reg_1550;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln123_1_fu_950_p2;
reg   [0:0] icmp_ln123_1_reg_1555;
reg   [63:0] max_val_1_load_reg_1559;
wire   [0:0] icmp_ln127_4_fu_968_p2;
reg   [0:0] icmp_ln127_4_reg_1566;
reg   [63:0] output_conv3_read_reg_1571;
wire    ap_CS_fsm_state17;
wire   [63:0] bitcast_ln120_2_fu_1040_p1;
reg   [63:0] bitcast_ln120_2_reg_1576;
wire   [0:0] icmp_ln127_9_fu_1048_p2;
reg   [0:0] icmp_ln127_9_reg_1583;
wire   [3:0] add_ln115_2_fu_1060_p2;
reg   [3:0] add_ln115_2_reg_1591;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln115_2_fu_1054_p2;
wire   [0:0] icmp_ln116_3_fu_1070_p2;
wire    ap_CS_fsm_state19;
wire   [30:0] add_ln116_2_fu_1075_p2;
reg   [30:0] add_ln116_2_reg_1605;
wire   [0:0] cmp17_i92_fu_1085_p2;
reg   [0:0] cmp17_i92_reg_1610;
wire   [0:0] icmp_ln117_2_fu_1094_p2;
reg   [0:0] icmp_ln117_2_reg_1614;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state20_pp2_stage0_iter0;
wire    ap_block_state21_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [30:0] add_ln117_2_fu_1099_p2;
reg   [30:0] add_ln117_2_reg_1618;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln123_2_fu_1109_p2;
reg   [0:0] icmp_ln123_2_reg_1623;
reg   [63:0] max_val_2_load_reg_1627;
wire   [0:0] icmp_ln127_8_fu_1127_p2;
reg   [0:0] icmp_ln127_8_reg_1634;
wire   [31:0] shl_ln149_fu_1199_p2;
reg   [31:0] shl_ln149_reg_1639;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln149_fu_1204_p2;
reg   [0:0] icmp_ln149_reg_1646;
wire   [31:0] empty_109_fu_1210_p2;
reg   [31:0] empty_109_reg_1650;
wire   [0:0] cmp31_i199_fu_1215_p2;
reg   [0:0] cmp31_i199_reg_1657;
reg   [63:0] output_conv4_read_reg_1661;
wire   [3:0] add_ln148_fu_1227_p2;
reg   [3:0] add_ln148_reg_1669;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp_ln148_fu_1221_p2;
wire   [0:0] icmp_ln149_1_fu_1237_p2;
wire    ap_CS_fsm_state26;
wire   [30:0] add_ln149_fu_1242_p2;
reg   [30:0] add_ln149_reg_1683;
wire   [0:0] empty_112_fu_1248_p1;
reg   [0:0] empty_112_reg_1688;
wire   [30:0] add_ln150_fu_1261_p2;
wire    ap_CS_fsm_state27;
reg   [63:0] output_conv5_read_reg_1703;
wire    ap_CS_fsm_state30;
wire   [3:0] add_ln148_1_fu_1277_p2;
reg   [3:0] add_ln148_1_reg_1711;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln148_1_fu_1271_p2;
wire   [0:0] icmp_ln149_2_fu_1287_p2;
wire    ap_CS_fsm_state32;
wire   [30:0] add_ln149_1_fu_1292_p2;
reg   [30:0] add_ln149_1_reg_1725;
wire   [0:0] empty_117_fu_1298_p1;
reg   [0:0] empty_117_reg_1730;
wire   [30:0] add_ln150_1_fu_1311_p2;
wire    ap_CS_fsm_state33;
reg   [63:0] output_conv6_read_reg_1745;
wire    ap_CS_fsm_state36;
wire   [3:0] add_ln148_2_fu_1327_p2;
reg   [3:0] add_ln148_2_reg_1753;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln148_2_fu_1321_p2;
wire   [0:0] icmp_ln149_3_fu_1337_p2;
wire    ap_CS_fsm_state38;
wire   [30:0] add_ln149_2_fu_1342_p2;
reg   [30:0] add_ln149_2_reg_1767;
wire   [0:0] empty_122_fu_1348_p1;
reg   [0:0] empty_122_reg_1772;
wire   [30:0] add_ln150_2_fu_1361_p2;
wire    ap_CS_fsm_state39;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state13;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state20;
reg    ap_enable_reg_pp2_iter1;
wire    grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start;
wire    grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_done;
wire    grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_idle;
wire    grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_ready;
wire   [63:0] grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_output_conv4;
wire    grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_output_conv4_ap_vld;
wire    grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start;
wire    grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_done;
wire    grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_idle;
wire    grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_ready;
wire   [63:0] grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_output_conv6;
wire    grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_output_conv6_ap_vld;
wire    grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start;
wire    grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_done;
wire    grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_idle;
wire    grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_ready;
wire   [63:0] grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_output_conv2;
wire    grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_output_conv2_ap_vld;
wire    grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start;
wire    grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_done;
wire    grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_idle;
wire    grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_ready;
wire   [63:0] grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_output_conv5;
wire    grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_output_conv5_ap_vld;
wire    grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start;
wire    grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_done;
wire    grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_idle;
wire    grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_ready;
wire   [63:0] grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_output_conv3;
wire    grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_output_conv3_ap_vld;
wire    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start;
wire    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_done;
wire    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_idle;
wire    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_ready;
wire   [63:0] grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_output_conv1;
wire    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_output_conv1_ap_vld;
wire    grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start;
wire    grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_done;
wire    grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_idle;
wire    grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_ready;
wire   [63:0] grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_output_conv7;
wire    grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_output_conv7_ap_vld;
reg   [4:0] num_channel_reg_354;
reg   [30:0] i_reg_365;
wire    ap_CS_fsm_state8;
reg   [30:0] ap_phi_mux_j_phi_fu_380_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] num_channel_1_reg_387;
reg   [30:0] i_1_reg_398;
wire    ap_CS_fsm_state15;
reg   [30:0] ap_phi_mux_j_1_phi_fu_413_p4;
wire    ap_block_pp1_stage0;
reg   [3:0] num_channel_2_reg_420;
reg   [30:0] i_2_reg_431;
wire    ap_CS_fsm_state22;
reg   [30:0] ap_phi_mux_j_2_phi_fu_446_p4;
wire    ap_block_pp2_stage0;
reg   [3:0] num_channel_3_reg_453;
reg   [30:0] i_3_reg_464;
wire    ap_CS_fsm_state28;
reg   [30:0] j_3_reg_475;
wire   [0:0] icmp_ln150_fu_1256_p2;
reg   [3:0] num_channel_4_reg_486;
reg   [30:0] i_4_reg_497;
wire    ap_CS_fsm_state34;
reg   [30:0] j_4_reg_508;
wire   [0:0] icmp_ln150_1_fu_1306_p2;
reg   [3:0] num_channel_5_reg_519;
reg   [30:0] i_5_reg_530;
wire    ap_CS_fsm_state40;
reg   [30:0] j_5_reg_541;
wire   [0:0] icmp_ln150_2_fu_1356_p2;
reg    grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start_reg;
wire    ap_CS_fsm_state23;
reg    grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start_reg;
wire    ap_CS_fsm_state35;
reg    grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start_reg;
wire    ap_CS_fsm_state9;
reg    grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start_reg;
wire    ap_CS_fsm_state29;
reg    grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start_reg;
wire    ap_CS_fsm_state16;
reg    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start_reg;
wire    ap_CS_fsm_state41;
reg   [63:0] max_val_fu_204;
reg   [63:0] max_val_1_fu_208;
reg   [63:0] max_val_2_fu_212;
wire   [63:0] bitcast_ln131_fu_876_p1;
wire    ap_block_pp0_stage0_01001;
wire   [63:0] bitcast_ln131_1_fu_1035_p1;
wire    ap_block_pp1_stage0_01001;
wire   [63:0] bitcast_ln131_2_fu_1194_p1;
wire    ap_block_pp2_stage0_01001;
wire   [0:0] empty_114_fu_1267_p1;
wire   [0:0] empty_119_fu_1317_p1;
wire   [0:0] empty_124_fu_1367_p1;
reg   [63:0] grp_fu_701_p0;
reg   [63:0] grp_fu_701_p1;
wire   [51:0] trunc_ln127_fu_726_p1;
wire   [31:0] zext_ln116_fu_748_p1;
wire   [31:0] p_cast_fu_763_p1;
wire   [31:0] j_cast_fu_772_p1;
wire   [31:0] zext_ln123_fu_787_p1;
wire   [10:0] tmp_fu_800_p4;
wire   [63:0] bitcast_ln127_fu_819_p1;
wire   [10:0] tmp_s_fu_822_p4;
wire   [51:0] trunc_ln127_3_fu_832_p1;
wire   [0:0] icmp_ln127_3_fu_846_p2;
wire   [0:0] icmp_ln127_2_fu_840_p2;
wire   [0:0] or_ln127_fu_836_p2;
wire   [0:0] or_ln127_1_fu_852_p2;
wire   [0:0] and_ln127_fu_858_p2;
wire   [0:0] grp_fu_701_p2;
wire   [0:0] and_ln127_1_fu_864_p2;
wire   [63:0] select_ln127_fu_870_p3;
wire   [51:0] trunc_ln127_1_fu_885_p1;
wire   [31:0] zext_ln116_1_fu_907_p1;
wire   [31:0] p_cast1_fu_922_p1;
wire   [31:0] j_1_cast_fu_931_p1;
wire   [31:0] zext_ln123_1_fu_946_p1;
wire   [10:0] tmp_4_fu_959_p4;
wire   [63:0] bitcast_ln127_1_fu_978_p1;
wire   [10:0] tmp_5_fu_981_p4;
wire   [51:0] trunc_ln127_4_fu_991_p1;
wire   [0:0] icmp_ln127_7_fu_1005_p2;
wire   [0:0] icmp_ln127_6_fu_999_p2;
wire   [0:0] or_ln127_2_fu_995_p2;
wire   [0:0] or_ln127_3_fu_1011_p2;
wire   [0:0] and_ln127_2_fu_1017_p2;
wire   [0:0] and_ln127_3_fu_1023_p2;
wire   [63:0] select_ln127_1_fu_1029_p3;
wire   [51:0] trunc_ln127_2_fu_1044_p1;
wire   [31:0] zext_ln116_2_fu_1066_p1;
wire   [31:0] p_cast2_fu_1081_p1;
wire   [31:0] j_2_cast_fu_1090_p1;
wire   [31:0] zext_ln123_2_fu_1105_p1;
wire   [10:0] tmp_7_fu_1118_p4;
wire   [63:0] bitcast_ln127_2_fu_1137_p1;
wire   [10:0] tmp_8_fu_1140_p4;
wire   [51:0] trunc_ln127_5_fu_1150_p1;
wire   [0:0] icmp_ln127_11_fu_1164_p2;
wire   [0:0] icmp_ln127_10_fu_1158_p2;
wire   [0:0] or_ln127_4_fu_1154_p2;
wire   [0:0] or_ln127_5_fu_1170_p2;
wire   [0:0] and_ln127_4_fu_1176_p2;
wire   [0:0] and_ln127_5_fu_1182_p2;
wire   [63:0] select_ln127_2_fu_1188_p3;
wire   [31:0] zext_ln149_fu_1233_p1;
wire   [31:0] j_3_cast_fu_1252_p1;
wire   [31:0] zext_ln149_1_fu_1283_p1;
wire   [31:0] j_4_cast_fu_1302_p1;
wire   [31:0] zext_ln149_2_fu_1333_p1;
wire   [31:0] j_5_cast_fu_1352_p1;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp1_stage0_00001;
wire    ap_block_pp2_stage0_00001;
reg   [37:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 38'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start_reg = 1'b0;
#0 grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start_reg = 1'b0;
#0 grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start_reg = 1'b0;
#0 grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start_reg = 1'b0;
#0 grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start_reg = 1'b0;
#0 grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start_reg = 1'b0;
#0 grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start_reg = 1'b0;
end

CNN_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start),
    .ap_done(grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_done),
    .ap_idle(grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_idle),
    .ap_ready(grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_ready),
    .p_read(output_pooling3_i),
    .output_conv4(grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_output_conv4),
    .output_conv4_ap_vld(grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_output_conv4_ap_vld),
    .padding(empty_reg_1377)
);

CNN_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start),
    .ap_done(grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_done),
    .ap_idle(grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_idle),
    .ap_ready(grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_ready),
    .p_read(output_upsampling2_i),
    .output_conv6(grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_output_conv6),
    .output_conv6_ap_vld(grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_output_conv6_ap_vld),
    .padding(empty_reg_1377)
);

CNN_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start),
    .ap_done(grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_done),
    .ap_idle(grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_idle),
    .ap_ready(grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_ready),
    .p_read(output_pooling1_i),
    .output_conv2(grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_output_conv2),
    .output_conv2_ap_vld(grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_output_conv2_ap_vld),
    .padding(empty_reg_1377)
);

CNN_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start),
    .ap_done(grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_done),
    .ap_idle(grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_idle),
    .ap_ready(grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_ready),
    .p_read(output_upsampling1_i),
    .output_conv5(grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_output_conv5),
    .output_conv5_ap_vld(grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_output_conv5_ap_vld),
    .padding(empty_reg_1377)
);

CNN_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start),
    .ap_done(grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_done),
    .ap_idle(grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_idle),
    .ap_ready(grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_ready),
    .p_read(output_pooling2_i),
    .output_conv3(grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_output_conv3),
    .output_conv3_ap_vld(grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_output_conv3_ap_vld),
    .padding(empty_reg_1377)
);

CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start),
    .ap_done(grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_done),
    .ap_idle(grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_idle),
    .ap_ready(grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_ready),
    .p_read(image_r),
    .output_conv1(grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_output_conv1),
    .output_conv1_ap_vld(grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_output_conv1_ap_vld),
    .padding(empty_reg_1377)
);

CNN_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start),
    .ap_done(grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_done),
    .ap_idle(grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_idle),
    .ap_ready(grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_ready),
    .p_read(output_upsampling3_i),
    .output_conv7(grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_output_conv7),
    .output_conv7_ap_vld(grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_output_conv7_ap_vld),
    .padding(empty_reg_1377)
);

CNN_CNN_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
CNN_dcmp_64ns_64ns_1_2_no_dsp_1_U353(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_701_p0),
    .din1(grp_fu_701_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_701_p2)
);

CNN_CNN_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
CNN_add_5ns_5ns_5_1_1_U354(
    .din0(num_channel_reg_354),
    .din1(5'd1),
    .dout(add_ln115_fu_742_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U355(
    .din0(i_reg_365),
    .din1(31'd1),
    .dout(add_ln116_fu_757_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U356(
    .din0(ap_phi_mux_j_phi_fu_380_p4),
    .din1(31'd1),
    .dout(add_ln117_fu_781_p2)
);

CNN_CNN_add_4ns_4ns_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
CNN_add_4ns_4ns_4_1_1_U357(
    .din0(num_channel_1_reg_387),
    .din1(4'd1),
    .dout(add_ln115_1_fu_901_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U358(
    .din0(i_1_reg_398),
    .din1(31'd1),
    .dout(add_ln116_1_fu_916_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U359(
    .din0(ap_phi_mux_j_1_phi_fu_413_p4),
    .din1(31'd1),
    .dout(add_ln117_1_fu_940_p2)
);

CNN_CNN_add_4ns_4ns_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
CNN_add_4ns_4ns_4_1_1_U360(
    .din0(num_channel_2_reg_420),
    .din1(4'd1),
    .dout(add_ln115_2_fu_1060_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U361(
    .din0(i_2_reg_431),
    .din1(31'd1),
    .dout(add_ln116_2_fu_1075_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U362(
    .din0(ap_phi_mux_j_2_phi_fu_446_p4),
    .din1(31'd1),
    .dout(add_ln117_2_fu_1099_p2)
);

CNN_CNN_add_4ns_4ns_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
CNN_add_4ns_4ns_4_1_1_U363(
    .din0(num_channel_3_reg_453),
    .din1(4'd1),
    .dout(add_ln148_fu_1227_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U364(
    .din0(i_3_reg_464),
    .din1(31'd1),
    .dout(add_ln149_fu_1242_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U365(
    .din0(j_3_reg_475),
    .din1(31'd1),
    .dout(add_ln150_fu_1261_p2)
);

CNN_CNN_add_4ns_4ns_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
CNN_add_4ns_4ns_4_1_1_U366(
    .din0(num_channel_4_reg_486),
    .din1(4'd1),
    .dout(add_ln148_1_fu_1277_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U367(
    .din0(i_4_reg_497),
    .din1(31'd1),
    .dout(add_ln149_1_fu_1292_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U368(
    .din0(j_4_reg_508),
    .din1(31'd1),
    .dout(add_ln150_1_fu_1311_p2)
);

CNN_CNN_add_4ns_4ns_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
CNN_add_4ns_4ns_4_1_1_U369(
    .din0(num_channel_5_reg_519),
    .din1(4'd1),
    .dout(add_ln148_2_fu_1327_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U370(
    .din0(i_5_reg_530),
    .din1(31'd1),
    .dout(add_ln149_2_fu_1342_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U371(
    .din0(j_5_reg_541),
    .din1(31'd1),
    .dout(add_ln150_2_fu_1361_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln116_1_fu_752_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln116_1_fu_752_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln116_2_fu_911_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state13))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln116_2_fu_911_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln116_3_fu_1070_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state20))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state20);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln116_3_fu_1070_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln115_fu_736_p2 == 1'd1))) begin
            grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start_reg <= 1'b1;
        end else if ((grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_ready == 1'b1)) begin
            grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln148_1_fu_1271_p2 == 1'd1))) begin
            grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start_reg <= 1'b1;
        end else if ((grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_ready == 1'b1)) begin
            grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln148_2_fu_1321_p2 == 1'd1))) begin
            grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start_reg <= 1'b1;
        end else if ((grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_ready == 1'b1)) begin
            grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start_reg <= 1'b1;
        end else if ((grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_ready == 1'b1)) begin
            grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln115_2_fu_1054_p2 == 1'd1))) begin
            grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start_reg <= 1'b1;
        end else if ((grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_ready == 1'b1)) begin
            grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln115_1_fu_895_p2 == 1'd1))) begin
            grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start_reg <= 1'b1;
        end else if ((grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_ready == 1'b1)) begin
            grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln148_fu_1221_p2 == 1'd1))) begin
            grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start_reg <= 1'b1;
        end else if ((grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_ready == 1'b1)) begin
            grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln115_1_fu_895_p2 == 1'd0) & (icmp_ln116_reg_1415 == 1'd1))) begin
        i_1_reg_398 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        i_1_reg_398 <= add_ln116_1_reg_1537;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln115_2_fu_1054_p2 == 1'd0) & (icmp_ln116_reg_1415 == 1'd1))) begin
        i_2_reg_431 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_2_reg_431 <= add_ln116_2_reg_1605;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln148_fu_1221_p2 == 1'd0) & (icmp_ln149_reg_1646 == 1'd1))) begin
        i_3_reg_464 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        i_3_reg_464 <= add_ln149_reg_1683;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln148_1_fu_1271_p2 == 1'd0) & (icmp_ln149_reg_1646 == 1'd1))) begin
        i_4_reg_497 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        i_4_reg_497 <= add_ln149_1_reg_1725;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln148_2_fu_1321_p2 == 1'd0) & (icmp_ln149_reg_1646 == 1'd1))) begin
        i_5_reg_530 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        i_5_reg_530 <= add_ln149_2_reg_1767;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln115_fu_736_p2 == 1'd0) & (icmp_ln116_reg_1415 == 1'd1))) begin
        i_reg_365 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_365 <= add_ln116_reg_1463;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln116_2_fu_911_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
        j_1_reg_409 <= 31'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln117_1_reg_1546 == 1'd0))) begin
        j_1_reg_409 <= add_ln117_1_reg_1550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln116_3_fu_1070_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
        j_2_reg_442 <= 31'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln117_2_reg_1614 == 1'd0))) begin
        j_2_reg_442 <= add_ln117_2_reg_1618;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln149_1_fu_1237_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
        j_3_reg_475 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln150_fu_1256_p2 == 1'd0))) begin
        j_3_reg_475 <= add_ln150_fu_1261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln149_2_fu_1287_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
        j_4_reg_508 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln150_1_fu_1306_p2 == 1'd0))) begin
        j_4_reg_508 <= add_ln150_1_fu_1311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln149_3_fu_1337_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
        j_5_reg_541 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln150_2_fu_1356_p2 == 1'd0))) begin
        j_5_reg_541 <= add_ln150_2_fu_1361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln116_1_fu_752_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
        j_reg_376 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln117_reg_1472 == 1'd0))) begin
        j_reg_376 <= add_ln117_reg_1476;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & ((icmp_ln116_2_fu_911_p2 == 1'd1) | (icmp_ln116_reg_1415 == 1'd0)))) begin
        num_channel_1_reg_387 <= add_ln115_1_reg_1517;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        num_channel_1_reg_387 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & ((icmp_ln116_3_fu_1070_p2 == 1'd1) | (icmp_ln116_reg_1415 == 1'd0)))) begin
        num_channel_2_reg_420 <= add_ln115_2_reg_1591;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        num_channel_2_reg_420 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        num_channel_3_reg_453 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & ((icmp_ln149_reg_1646 == 1'd0) | (icmp_ln149_1_fu_1237_p2 == 1'd1)))) begin
        num_channel_3_reg_453 <= add_ln148_reg_1669;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        num_channel_4_reg_486 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state32) & ((icmp_ln149_reg_1646 == 1'd0) | (icmp_ln149_2_fu_1287_p2 == 1'd1)))) begin
        num_channel_4_reg_486 <= add_ln148_1_reg_1711;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        num_channel_5_reg_519 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state38) & ((icmp_ln149_reg_1646 == 1'd0) | (icmp_ln149_3_fu_1337_p2 == 1'd1)))) begin
        num_channel_5_reg_519 <= add_ln148_2_reg_1753;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln116_1_fu_752_p2 == 1'd1) | (icmp_ln116_reg_1415 == 1'd0)))) begin
        num_channel_reg_354 <= add_ln115_reg_1443;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        num_channel_reg_354 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln115_1_reg_1517 <= add_ln115_1_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln115_2_reg_1591 <= add_ln115_2_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln115_reg_1443 <= add_ln115_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln116_reg_1415 == 1'd1))) begin
        add_ln116_1_reg_1537 <= add_ln116_1_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln116_reg_1415 == 1'd1))) begin
        add_ln116_2_reg_1605 <= add_ln116_2_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln116_reg_1415 == 1'd1))) begin
        add_ln116_reg_1463 <= add_ln116_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln117_1_reg_1550 <= add_ln117_1_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln117_2_reg_1618 <= add_ln117_2_fu_1099_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln117_reg_1476 <= add_ln117_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln148_1_reg_1711 <= add_ln148_1_fu_1277_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_ln148_2_reg_1753 <= add_ln148_2_fu_1327_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln148_reg_1669 <= add_ln148_fu_1227_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln149_reg_1646 == 1'd1))) begin
        add_ln149_1_reg_1725 <= add_ln149_1_fu_1292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln149_reg_1646 == 1'd1))) begin
        add_ln149_2_reg_1767 <= add_ln149_2_fu_1342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln149_reg_1646 == 1'd1))) begin
        add_ln149_reg_1683 <= add_ln149_fu_1242_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bitcast_ln120_1_reg_1502 <= bitcast_ln120_1_fu_881_p1;
        icmp_ln127_5_reg_1509 <= icmp_ln127_5_fu_889_p2;
        output_conv2_read_reg_1497 <= output_conv2_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bitcast_ln120_2_reg_1576 <= bitcast_ln120_2_fu_1040_p1;
        icmp_ln127_9_reg_1583 <= icmp_ln127_9_fu_1048_p2;
        output_conv3_read_reg_1571 <= output_conv3_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bitcast_ln120_reg_1428 <= bitcast_ln120_fu_722_p1;
        cmp27_i_reg_1419 <= cmp27_i_fu_716_p2;
        icmp_ln116_reg_1415 <= icmp_ln116_fu_710_p2;
        icmp_ln127_1_reg_1435 <= icmp_ln127_1_fu_730_p2;
        output_conv1_read_reg_1423 <= output_conv1_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln116_2_fu_911_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
        cmp17_i17_reg_1542 <= cmp17_i17_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln116_3_fu_1070_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
        cmp17_i92_reg_1610 <= cmp17_i92_fu_1085_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln116_1_fu_752_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
        cmp17_i_reg_1468 <= cmp17_i_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        cmp31_i199_reg_1657 <= cmp31_i199_fu_1215_p2;
        empty_109_reg_1650[31 : 1] <= empty_109_fu_1210_p2[31 : 1];
        icmp_ln149_reg_1646 <= icmp_ln149_fu_1204_p2;
        output_conv4_read_reg_1661 <= output_conv4_i;
        shl_ln149_reg_1639[31 : 1] <= shl_ln149_fu_1199_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln149_1_fu_1237_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
        empty_112_reg_1688 <= empty_112_fu_1248_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln149_2_fu_1287_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
        empty_117_reg_1730 <= empty_117_fu_1298_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln149_3_fu_1337_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
        empty_122_reg_1772 <= empty_122_fu_1348_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_1377 <= empty_fu_705_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln117_1_reg_1546 <= icmp_ln117_1_fu_935_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln117_2_reg_1614 <= icmp_ln117_2_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln117_reg_1472 <= icmp_ln117_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln117_1_fu_935_p2 == 1'd0) & (cmp17_i17_reg_1542 == 1'd1))) begin
        icmp_ln123_1_reg_1555 <= icmp_ln123_1_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln117_2_fu_1094_p2 == 1'd0) & (cmp17_i92_reg_1610 == 1'd1))) begin
        icmp_ln123_2_reg_1623 <= icmp_ln123_2_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln117_fu_776_p2 == 1'd0) & (cmp17_i_reg_1468 == 1'd1))) begin
        icmp_ln123_reg_1481 <= icmp_ln123_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln117_1_fu_935_p2 == 1'd0) & (icmp_ln123_1_fu_950_p2 == 1'd1) & (cmp17_i17_reg_1542 == 1'd1))) begin
        icmp_ln127_4_reg_1566 <= icmp_ln127_4_fu_968_p2;
        max_val_1_load_reg_1559 <= max_val_1_fu_208;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln117_2_fu_1094_p2 == 1'd0) & (icmp_ln123_2_fu_1109_p2 == 1'd1) & (cmp17_i92_reg_1610 == 1'd1))) begin
        icmp_ln127_8_reg_1634 <= icmp_ln127_8_fu_1127_p2;
        max_val_2_load_reg_1627 <= max_val_2_fu_212;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln117_fu_776_p2 == 1'd0) & (icmp_ln123_fu_791_p2 == 1'd1) & (cmp17_i_reg_1468 == 1'd1))) begin
        icmp_ln127_reg_1492 <= icmp_ln127_fu_809_p2;
        max_val_load_reg_1485 <= max_val_fu_204;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln117_1_fu_935_p2 == 1'd0))) begin
        max_val_1_fu_208 <= bitcast_ln120_1_reg_1502;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln117_2_fu_1094_p2 == 1'd0))) begin
        max_val_2_fu_212 <= bitcast_ln120_2_reg_1576;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln117_fu_776_p2 == 1'd0))) begin
        max_val_fu_204 <= bitcast_ln120_reg_1428;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        output_conv5_read_reg_1703 <= output_conv5_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_conv6_read_reg_1745 <= output_conv6_i;
    end
end

always @ (*) begin
    if ((icmp_ln117_fu_776_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln117_1_fu_935_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln117_2_fu_1094_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln117_1_reg_1546 == 1'd0))) begin
        ap_phi_mux_j_1_phi_fu_413_p4 = add_ln117_1_reg_1550;
    end else begin
        ap_phi_mux_j_1_phi_fu_413_p4 = j_1_reg_409;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln117_2_reg_1614 == 1'd0))) begin
        ap_phi_mux_j_2_phi_fu_446_p4 = add_ln117_2_reg_1618;
    end else begin
        ap_phi_mux_j_2_phi_fu_446_p4 = j_2_reg_442;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln117_reg_1472 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_380_p4 = add_ln117_reg_1476;
    end else begin
        ap_phi_mux_j_phi_fu_380_p4 = j_reg_376;
    end
end

always @ (*) begin
    if (((grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_701_p0 = bitcast_ln120_2_reg_1576;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_701_p0 = bitcast_ln120_1_reg_1502;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_701_p0 = bitcast_ln120_reg_1428;
    end else begin
        grp_fu_701_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_701_p1 = max_val_2_fu_212;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_701_p1 = max_val_1_fu_208;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_701_p1 = max_val_fu_204;
    end else begin
        grp_fu_701_p1 = 'bx;
    end
end

always @ (*) begin
    if (((grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_output_conv1_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        output_conv1_o = grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_output_conv1;
    end else begin
        output_conv1_o = output_conv1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        output_conv1_o_ap_vld = grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_output_conv1_ap_vld;
    end else begin
        output_conv1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_output_conv2_ap_vld == 1'b1))) begin
        output_conv2_o = grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_output_conv2;
    end else begin
        output_conv2_o = output_conv2_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_conv2_o_ap_vld = grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_output_conv2_ap_vld;
    end else begin
        output_conv2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_output_conv3_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        output_conv3_o = grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_output_conv3;
    end else begin
        output_conv3_o = output_conv3_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        output_conv3_o_ap_vld = grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_output_conv3_ap_vld;
    end else begin
        output_conv3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_output_conv4_ap_vld == 1'b1))) begin
        output_conv4_o = grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_output_conv4;
    end else begin
        output_conv4_o = output_conv4_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        output_conv4_o_ap_vld = grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_output_conv4_ap_vld;
    end else begin
        output_conv4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_output_conv5_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        output_conv5_o = grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_output_conv5;
    end else begin
        output_conv5_o = output_conv5_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        output_conv5_o_ap_vld = grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_output_conv5_ap_vld;
    end else begin
        output_conv5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) & (grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_output_conv6_ap_vld == 1'b1))) begin
        output_conv6_o = grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_output_conv6;
    end else begin
        output_conv6_o = output_conv6_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        output_conv6_o_ap_vld = grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_output_conv6_ap_vld;
    end else begin
        output_conv6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001) & (icmp_ln123_reg_1481 == 1'd1) & (cmp17_i_reg_1468 == 1'd1))) begin
        output_pooling1_o = bitcast_ln131_fu_876_p1;
    end else begin
        output_pooling1_o = output_pooling1_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln123_reg_1481 == 1'd1) & (cmp17_i_reg_1468 == 1'd1))) begin
        output_pooling1_o_ap_vld = 1'b1;
    end else begin
        output_pooling1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001) & (icmp_ln123_1_reg_1555 == 1'd1) & (cmp17_i17_reg_1542 == 1'd1))) begin
        output_pooling2_o = bitcast_ln131_1_fu_1035_p1;
    end else begin
        output_pooling2_o = output_pooling2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln123_1_reg_1555 == 1'd1) & (cmp17_i17_reg_1542 == 1'd1))) begin
        output_pooling2_o_ap_vld = 1'b1;
    end else begin
        output_pooling2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_01001) & (icmp_ln123_2_reg_1623 == 1'd1) & (cmp17_i92_reg_1610 == 1'd1))) begin
        output_pooling3_o = bitcast_ln131_2_fu_1194_p1;
    end else begin
        output_pooling3_o = output_pooling3_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln123_2_reg_1623 == 1'd1) & (cmp17_i92_reg_1610 == 1'd1))) begin
        output_pooling3_o_ap_vld = 1'b1;
    end else begin
        output_pooling3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln150_fu_1256_p2 == 1'd0) & (empty_112_reg_1688 == 1'd0) & (empty_114_fu_1267_p1 == 1'd0))) begin
        output_upsampling1_o = output_conv4_read_reg_1661;
    end else begin
        output_upsampling1_o = output_upsampling1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln150_fu_1256_p2 == 1'd0) & (empty_112_reg_1688 == 1'd0) & (empty_114_fu_1267_p1 == 1'd0))) begin
        output_upsampling1_o_ap_vld = 1'b1;
    end else begin
        output_upsampling1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln150_1_fu_1306_p2 == 1'd0) & (empty_117_reg_1730 == 1'd0) & (empty_119_fu_1317_p1 == 1'd0))) begin
        output_upsampling2_o = output_conv5_read_reg_1703;
    end else begin
        output_upsampling2_o = output_upsampling2_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln150_1_fu_1306_p2 == 1'd0) & (empty_117_reg_1730 == 1'd0) & (empty_119_fu_1317_p1 == 1'd0))) begin
        output_upsampling2_o_ap_vld = 1'b1;
    end else begin
        output_upsampling2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln150_2_fu_1356_p2 == 1'd0) & (empty_122_reg_1772 == 1'd0) & (empty_124_fu_1367_p1 == 1'd0))) begin
        output_upsampling3_o = output_conv6_read_reg_1745;
    end else begin
        output_upsampling3_o = output_upsampling3_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln150_2_fu_1356_p2 == 1'd0) & (empty_122_reg_1772 == 1'd0) & (empty_124_fu_1367_p1 == 1'd0))) begin
        output_upsampling3_o_ap_vld = 1'b1;
    end else begin
        output_upsampling3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln115_fu_736_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln116_1_fu_752_p2 == 1'd1) | (icmp_ln116_reg_1415 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln116_1_fu_752_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln117_fu_776_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln117_fu_776_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln115_1_fu_895_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & ((icmp_ln116_2_fu_911_p2 == 1'd1) | (icmp_ln116_reg_1415 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln116_2_fu_911_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln117_1_fu_935_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln117_1_fu_935_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln115_2_fu_1054_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & ((icmp_ln116_3_fu_1070_p2 == 1'd1) | (icmp_ln116_reg_1415 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln116_3_fu_1070_p2 == 1'd0) & (cmp27_i_reg_1419 == 1'd1) & (icmp_ln116_reg_1415 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln117_2_fu_1094_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln117_2_fu_1094_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln148_fu_1221_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & ((icmp_ln149_reg_1646 == 1'd0) | (icmp_ln149_1_fu_1237_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln149_1_fu_1237_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln150_fu_1256_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln148_1_fu_1271_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & ((icmp_ln149_reg_1646 == 1'd0) | (icmp_ln149_2_fu_1287_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln149_2_fu_1287_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln150_1_fu_1306_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state35 : begin
            if (((grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (icmp_ln148_2_fu_1321_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & ((icmp_ln149_reg_1646 == 1'd0) | (icmp_ln149_3_fu_1337_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else if (((1'b1 == ap_CS_fsm_state38) & (icmp_ln149_3_fu_1337_p2 == 1'd0) & (cmp31_i199_reg_1657 == 1'd1) & (icmp_ln149_reg_1646 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (icmp_ln150_2_fu_1356_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln127_1_fu_864_p2 = (grp_fu_701_p2 & and_ln127_fu_858_p2);

assign and_ln127_2_fu_1017_p2 = (or_ln127_3_fu_1011_p2 & or_ln127_2_fu_995_p2);

assign and_ln127_3_fu_1023_p2 = (grp_fu_701_p2 & and_ln127_2_fu_1017_p2);

assign and_ln127_4_fu_1176_p2 = (or_ln127_5_fu_1170_p2 & or_ln127_4_fu_1154_p2);

assign and_ln127_5_fu_1182_p2 = (grp_fu_701_p2 & and_ln127_4_fu_1176_p2);

assign and_ln127_fu_858_p2 = (or_ln127_fu_836_p2 & or_ln127_1_fu_852_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign bitcast_ln120_1_fu_881_p1 = output_conv2_i;

assign bitcast_ln120_2_fu_1040_p1 = output_conv3_i;

assign bitcast_ln120_fu_722_p1 = output_conv1_i;

assign bitcast_ln127_1_fu_978_p1 = max_val_1_load_reg_1559;

assign bitcast_ln127_2_fu_1137_p1 = max_val_2_load_reg_1627;

assign bitcast_ln127_fu_819_p1 = max_val_load_reg_1485;

assign bitcast_ln131_1_fu_1035_p1 = select_ln127_1_fu_1029_p3;

assign bitcast_ln131_2_fu_1194_p1 = select_ln127_2_fu_1188_p3;

assign bitcast_ln131_fu_876_p1 = select_ln127_fu_870_p3;

assign cmp17_i17_fu_926_p2 = (($signed(p_cast1_fu_922_p1) < $signed(hight)) ? 1'b1 : 1'b0);

assign cmp17_i92_fu_1085_p2 = (($signed(p_cast2_fu_1081_p1) < $signed(hight)) ? 1'b1 : 1'b0);

assign cmp17_i_fu_767_p2 = (($signed(p_cast_fu_763_p1) < $signed(hight)) ? 1'b1 : 1'b0);

assign cmp27_i_fu_716_p2 = (($signed(width) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign cmp31_i199_fu_1215_p2 = (($signed(empty_109_fu_1210_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign empty_109_fu_1210_p2 = width << 32'd1;

assign empty_112_fu_1248_p1 = i_3_reg_464[0:0];

assign empty_114_fu_1267_p1 = j_3_reg_475[0:0];

assign empty_117_fu_1298_p1 = i_4_reg_497[0:0];

assign empty_119_fu_1317_p1 = j_4_reg_508[0:0];

assign empty_122_fu_1348_p1 = i_5_reg_530[0:0];

assign empty_124_fu_1367_p1 = j_5_reg_541[0:0];

assign empty_fu_705_p1 = padding[30:0];

assign grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start = grp_convolution_double_double_double_double_14_14_16_8_14_14_3_3_1_1_s_fu_608_ap_start_reg;

assign grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start = grp_convolution_double_double_double_double_16_16_8_16_14_14_3_3_1_0_s_fu_589_ap_start_reg;

assign grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start = grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_ap_start_reg;

assign grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start = grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_fu_665_ap_start_reg;

assign grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start = grp_convolution_double_double_double_double_4_4_8_8_4_4_3_3_1_1_s_fu_552_ap_start_reg;

assign grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start = grp_convolution_double_double_double_double_7_7_8_8_7_7_3_3_1_1_s_fu_646_ap_start_reg;

assign grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start = grp_convolution_double_double_double_double_8_8_8_8_8_8_3_3_1_1_s_fu_627_ap_start_reg;

assign icmp_ln115_1_fu_895_p2 = ((num_channel_1_reg_387 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln115_2_fu_1054_p2 = ((num_channel_2_reg_420 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_736_p2 = ((num_channel_reg_354 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_752_p2 = ((zext_ln116_fu_748_p1 == hight) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_911_p2 = ((zext_ln116_1_fu_907_p1 == hight) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_1070_p2 = ((zext_ln116_2_fu_1066_p1 == hight) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_710_p2 = (($signed(hight) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln117_1_fu_935_p2 = ((j_1_cast_fu_931_p1 == width) ? 1'b1 : 1'b0);

assign icmp_ln117_2_fu_1094_p2 = ((j_2_cast_fu_1090_p1 == width) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_776_p2 = ((j_cast_fu_772_p1 == width) ? 1'b1 : 1'b0);

assign icmp_ln123_1_fu_950_p2 = (($signed(zext_ln123_1_fu_946_p1) < $signed(width)) ? 1'b1 : 1'b0);

assign icmp_ln123_2_fu_1109_p2 = (($signed(zext_ln123_2_fu_1105_p1) < $signed(width)) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_791_p2 = (($signed(zext_ln123_fu_787_p1) < $signed(width)) ? 1'b1 : 1'b0);

assign icmp_ln127_10_fu_1158_p2 = ((tmp_8_fu_1140_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln127_11_fu_1164_p2 = ((trunc_ln127_5_fu_1150_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln127_1_fu_730_p2 = ((trunc_ln127_fu_726_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln127_2_fu_840_p2 = ((tmp_s_fu_822_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln127_3_fu_846_p2 = ((trunc_ln127_3_fu_832_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln127_4_fu_968_p2 = ((tmp_4_fu_959_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln127_5_fu_889_p2 = ((trunc_ln127_1_fu_885_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln127_6_fu_999_p2 = ((tmp_5_fu_981_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln127_7_fu_1005_p2 = ((trunc_ln127_4_fu_991_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln127_8_fu_1127_p2 = ((tmp_7_fu_1118_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln127_9_fu_1048_p2 = ((trunc_ln127_2_fu_1044_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_809_p2 = ((tmp_fu_800_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln148_1_fu_1271_p2 = ((num_channel_4_reg_486 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln148_2_fu_1321_p2 = ((num_channel_5_reg_519 == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_1221_p2 = ((num_channel_3_reg_453 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln149_1_fu_1237_p2 = ((zext_ln149_fu_1233_p1 == shl_ln149_reg_1639) ? 1'b1 : 1'b0);

assign icmp_ln149_2_fu_1287_p2 = ((zext_ln149_1_fu_1283_p1 == shl_ln149_reg_1639) ? 1'b1 : 1'b0);

assign icmp_ln149_3_fu_1337_p2 = ((zext_ln149_2_fu_1333_p1 == shl_ln149_reg_1639) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_1204_p2 = (($signed(shl_ln149_fu_1199_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln150_1_fu_1306_p2 = ((j_4_cast_fu_1302_p1 == empty_109_reg_1650) ? 1'b1 : 1'b0);

assign icmp_ln150_2_fu_1356_p2 = ((j_5_cast_fu_1352_p1 == empty_109_reg_1650) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_1256_p2 = ((j_3_cast_fu_1252_p1 == empty_109_reg_1650) ? 1'b1 : 1'b0);

assign j_1_cast_fu_931_p1 = ap_phi_mux_j_1_phi_fu_413_p4;

assign j_2_cast_fu_1090_p1 = ap_phi_mux_j_2_phi_fu_446_p4;

assign j_3_cast_fu_1252_p1 = j_3_reg_475;

assign j_4_cast_fu_1302_p1 = j_4_reg_508;

assign j_5_cast_fu_1352_p1 = j_5_reg_541;

assign j_cast_fu_772_p1 = ap_phi_mux_j_phi_fu_380_p4;

assign or_ln127_1_fu_852_p2 = (icmp_ln127_3_fu_846_p2 | icmp_ln127_2_fu_840_p2);

assign or_ln127_2_fu_995_p2 = (icmp_ln127_5_reg_1509 | icmp_ln127_4_reg_1566);

assign or_ln127_3_fu_1011_p2 = (icmp_ln127_7_fu_1005_p2 | icmp_ln127_6_fu_999_p2);

assign or_ln127_4_fu_1154_p2 = (icmp_ln127_9_reg_1583 | icmp_ln127_8_reg_1634);

assign or_ln127_5_fu_1170_p2 = (icmp_ln127_11_fu_1164_p2 | icmp_ln127_10_fu_1158_p2);

assign or_ln127_fu_836_p2 = (icmp_ln127_reg_1492 | icmp_ln127_1_reg_1435);

assign output_conv7 = grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_output_conv7;

assign output_conv7_ap_vld = grp_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_fu_684_output_conv7_ap_vld;

assign p_cast1_fu_922_p1 = add_ln116_1_fu_916_p2;

assign p_cast2_fu_1081_p1 = add_ln116_2_fu_1075_p2;

assign p_cast_fu_763_p1 = add_ln116_fu_757_p2;

assign select_ln127_1_fu_1029_p3 = ((and_ln127_3_fu_1023_p2[0:0] === 1'b1) ? bitcast_ln120_1_reg_1502 : max_val_1_load_reg_1559);

assign select_ln127_2_fu_1188_p3 = ((and_ln127_5_fu_1182_p2[0:0] === 1'b1) ? bitcast_ln120_2_reg_1576 : max_val_2_load_reg_1627);

assign select_ln127_fu_870_p3 = ((and_ln127_1_fu_864_p2[0:0] === 1'b1) ? bitcast_ln120_reg_1428 : max_val_load_reg_1485);

assign shl_ln149_fu_1199_p2 = hight << 32'd1;

assign tmp_4_fu_959_p4 = {{output_conv2_read_reg_1497[62:52]}};

assign tmp_5_fu_981_p4 = {{bitcast_ln127_1_fu_978_p1[62:52]}};

assign tmp_7_fu_1118_p4 = {{output_conv3_read_reg_1571[62:52]}};

assign tmp_8_fu_1140_p4 = {{bitcast_ln127_2_fu_1137_p1[62:52]}};

assign tmp_fu_800_p4 = {{output_conv1_read_reg_1423[62:52]}};

assign tmp_s_fu_822_p4 = {{bitcast_ln127_fu_819_p1[62:52]}};

assign trunc_ln127_1_fu_885_p1 = output_conv2_i[51:0];

assign trunc_ln127_2_fu_1044_p1 = output_conv3_i[51:0];

assign trunc_ln127_3_fu_832_p1 = bitcast_ln127_fu_819_p1[51:0];

assign trunc_ln127_4_fu_991_p1 = bitcast_ln127_1_fu_978_p1[51:0];

assign trunc_ln127_5_fu_1150_p1 = bitcast_ln127_2_fu_1137_p1[51:0];

assign trunc_ln127_fu_726_p1 = output_conv1_i[51:0];

assign zext_ln116_1_fu_907_p1 = i_1_reg_398;

assign zext_ln116_2_fu_1066_p1 = i_2_reg_431;

assign zext_ln116_fu_748_p1 = i_reg_365;

assign zext_ln123_1_fu_946_p1 = add_ln117_1_fu_940_p2;

assign zext_ln123_2_fu_1105_p1 = add_ln117_2_fu_1099_p2;

assign zext_ln123_fu_787_p1 = add_ln117_fu_781_p2;

assign zext_ln149_1_fu_1283_p1 = i_4_reg_497;

assign zext_ln149_2_fu_1333_p1 = i_5_reg_530;

assign zext_ln149_fu_1233_p1 = i_3_reg_464;

always @ (posedge ap_clk) begin
    shl_ln149_reg_1639[0] <= 1'b0;
    empty_109_reg_1650[0] <= 1'b0;
end

endmodule //CNN_CNN
