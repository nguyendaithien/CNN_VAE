// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CNN_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        output_conv7,
        output_conv7_ap_vld,
        padding
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_pp0_stage0 = 8'd8;
parameter    ap_ST_fsm_state6 = 8'd16;
parameter    ap_ST_fsm_state7 = 8'd32;
parameter    ap_ST_fsm_pp1_stage0 = 8'd64;
parameter    ap_ST_fsm_state55 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] p_read;
output  [63:0] output_conv7;
output   output_conv7_ap_vld;
input  [30:0] padding;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_conv7_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] line_buffer_1_1_address0;
reg    line_buffer_1_1_ce0;
wire   [63:0] line_buffer_1_1_q0;
reg   [4:0] line_buffer_1_1_address1;
reg    line_buffer_1_1_ce1;
reg    line_buffer_1_1_we1;
wire   [63:0] line_buffer_1_1_q1;
reg   [4:0] line_buffer_0_1_address0;
reg    line_buffer_0_1_ce0;
reg    line_buffer_0_1_we0;
wire   [63:0] line_buffer_0_1_q0;
reg   [4:0] line_buffer_0_1_address1;
reg    line_buffer_0_1_ce1;
wire   [63:0] line_buffer_0_1_q1;
reg   [4:0] line_buffer_2_1_address0;
reg    line_buffer_2_1_ce0;
reg    line_buffer_2_1_we0;
wire   [63:0] line_buffer_2_1_d0;
wire   [63:0] line_buffer_2_1_q0;
reg   [4:0] line_buffer_2_1_address1;
reg    line_buffer_2_1_ce1;
wire   [63:0] line_buffer_2_1_q1;
wire   [7:0] kernel_conv7_address0;
reg    kernel_conv7_ce0;
wire   [63:0] kernel_conv7_q0;
wire   [7:0] kernel_conv7_address1;
reg    kernel_conv7_ce1;
wire   [63:0] kernel_conv7_q1;
wire   [7:0] kernel_conv7_address2;
reg    kernel_conv7_ce2;
wire   [63:0] kernel_conv7_q2;
wire   [7:0] kernel_conv7_address3;
reg    kernel_conv7_ce3;
wire   [63:0] kernel_conv7_q3;
wire   [7:0] kernel_conv7_address4;
reg    kernel_conv7_ce4;
wire   [63:0] kernel_conv7_q4;
wire   [7:0] kernel_conv7_address5;
reg    kernel_conv7_ce5;
wire   [63:0] kernel_conv7_q5;
wire   [7:0] kernel_conv7_address6;
reg    kernel_conv7_ce6;
wire   [63:0] kernel_conv7_q6;
wire   [7:0] kernel_conv7_address7;
reg    kernel_conv7_ce7;
wire   [63:0] kernel_conv7_q7;
wire   [7:0] kernel_conv7_address8;
reg    kernel_conv7_ce8;
wire   [63:0] kernel_conv7_q8;
reg   [4:0] j_reg_374;
reg   [30:0] b_reg_385;
reg   [63:0] window_buffer_load_7_0_reg_396;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
wire    ap_block_state12_pp1_stage0_iter4;
wire    ap_block_state13_pp1_stage0_iter5;
wire    ap_block_state14_pp1_stage0_iter6;
wire    ap_block_state15_pp1_stage0_iter7;
wire    ap_block_state16_pp1_stage0_iter8;
wire    ap_block_state17_pp1_stage0_iter9;
wire    ap_block_state18_pp1_stage0_iter10;
wire    ap_block_state19_pp1_stage0_iter11;
wire    ap_block_state20_pp1_stage0_iter12;
wire    ap_block_state21_pp1_stage0_iter13;
wire    ap_block_state22_pp1_stage0_iter14;
wire    ap_block_state23_pp1_stage0_iter15;
wire    ap_block_state24_pp1_stage0_iter16;
wire    ap_block_state25_pp1_stage0_iter17;
wire    ap_block_state26_pp1_stage0_iter18;
wire    ap_block_state27_pp1_stage0_iter19;
wire    ap_block_state28_pp1_stage0_iter20;
wire    ap_block_state29_pp1_stage0_iter21;
wire    ap_block_state30_pp1_stage0_iter22;
wire    ap_block_state31_pp1_stage0_iter23;
wire    ap_block_state32_pp1_stage0_iter24;
wire    ap_block_state33_pp1_stage0_iter25;
wire    ap_block_state34_pp1_stage0_iter26;
wire    ap_block_state35_pp1_stage0_iter27;
wire    ap_block_state36_pp1_stage0_iter28;
wire    ap_block_state37_pp1_stage0_iter29;
wire    ap_block_state38_pp1_stage0_iter30;
wire    ap_block_state39_pp1_stage0_iter31;
wire    ap_block_state40_pp1_stage0_iter32;
wire    ap_block_state41_pp1_stage0_iter33;
wire    ap_block_state42_pp1_stage0_iter34;
wire    ap_block_state43_pp1_stage0_iter35;
wire    ap_block_state44_pp1_stage0_iter36;
wire    ap_block_state45_pp1_stage0_iter37;
wire    ap_block_state46_pp1_stage0_iter38;
wire    ap_block_state47_pp1_stage0_iter39;
wire    ap_block_state48_pp1_stage0_iter40;
wire    ap_block_state49_pp1_stage0_iter41;
wire    ap_block_state50_pp1_stage0_iter42;
wire    ap_block_state51_pp1_stage0_iter43;
wire    ap_block_state52_pp1_stage0_iter44;
wire    ap_block_state53_pp1_stage0_iter45;
wire    ap_block_state54_pp1_stage0_iter46;
wire    ap_block_pp1_stage0_11001;
reg   [63:0] window_buffer_load_0_reg_406;
reg   [63:0] window_buffer_load_7_1_reg_417;
reg   [63:0] window_buffer_load_1_reg_427;
reg   [63:0] window_buffer_load_7_2_reg_438;
reg   [63:0] window_buffer_load_2_reg_448;
wire   [31:0] add_ln31_fu_556_p2;
reg   [31:0] add_ln31_reg_950;
wire   [0:0] icmp_ln42_fu_562_p2;
reg   [0:0] icmp_ln42_reg_955;
wire   [31:0] sub13_fu_568_p2;
reg   [31:0] sub13_reg_959;
wire   [31:0] sub47_fu_574_p2;
reg   [31:0] sub47_reg_964;
wire   [0:0] cmp4827_fu_580_p2;
reg   [0:0] cmp4827_reg_969;
wire   [63:0] bitcast_ln49_fu_586_p1;
reg   [63:0] bitcast_ln49_reg_973;
wire   [8:0] add_ln39_fu_622_p2;
reg   [8:0] add_ln39_reg_981;
wire    ap_CS_fsm_state2;
wire   [4:0] select_ln39_fu_634_p3;
reg   [4:0] select_ln39_reg_986;
wire   [0:0] icmp_ln39_fu_616_p2;
wire   [4:0] select_ln39_14_fu_775_p3;
reg   [4:0] select_ln39_14_reg_1039;
reg   [63:0] kernel_conv7_load_reg_1044;
wire    ap_CS_fsm_state3;
reg   [63:0] kernel_conv7_load_1_reg_1049;
reg   [63:0] kernel_conv7_load_2_reg_1054;
reg   [63:0] kernel_conv7_load_3_reg_1059;
reg   [63:0] kernel_conv7_load_4_reg_1064;
reg   [63:0] kernel_conv7_load_5_reg_1069;
reg   [63:0] kernel_conv7_load_6_reg_1074;
reg   [63:0] kernel_conv7_load_7_reg_1079;
reg   [63:0] kernel_conv7_load_8_reg_1084;
wire   [0:0] or_ln45_fu_793_p2;
reg   [0:0] or_ln45_reg_1089;
wire   [0:0] icmp_ln42_4_fu_803_p2;
reg   [0:0] icmp_ln42_4_reg_1094;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] add_ln42_fu_808_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] j_cast3_fu_814_p1;
reg   [63:0] j_cast3_reg_1103;
reg   [4:0] line_buffer_1_1_addr_reg_1108;
wire   [0:0] icmp_ln52_fu_859_p2;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln64_fu_869_p2;
reg   [0:0] icmp_ln64_reg_1153;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter1_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter2_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter3_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter4_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter5_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter6_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter7_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter8_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter9_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter10_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter11_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter12_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter13_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter14_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter15_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter16_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter17_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter18_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter19_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter20_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter21_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter22_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter23_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter24_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter25_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter26_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter27_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter28_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter29_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter30_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter31_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter32_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter33_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter34_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter35_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter36_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter37_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter38_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter39_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter40_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter41_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter42_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter43_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter44_reg;
reg   [0:0] icmp_ln64_reg_1153_pp1_iter45_reg;
wire   [30:0] add_ln64_fu_874_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] p_cast4_fu_890_p1;
reg   [63:0] p_cast4_reg_1162;
reg   [63:0] p_cast4_reg_1162_pp1_iter1_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter2_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter3_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter4_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter5_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter6_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter7_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter8_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter9_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter10_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter11_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter12_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter13_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter14_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter15_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter16_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter17_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter18_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter19_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter20_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter21_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter22_reg;
reg   [63:0] p_cast4_reg_1162_pp1_iter23_reg;
reg   [63:0] line_buffer_0_1_load_2_reg_1173;
reg    ap_enable_reg_pp1_iter1;
reg   [63:0] line_buffer_0_1_load_2_reg_1173_pp1_iter2_reg;
wire   [63:0] grp_fu_501_p2;
reg   [63:0] mul_reg_1179;
wire   [63:0] grp_fu_506_p2;
reg   [63:0] mul_0_1_reg_1184;
reg   [63:0] mul_0_1_reg_1184_pp1_iter6_reg;
reg   [63:0] mul_0_1_reg_1184_pp1_iter7_reg;
reg   [63:0] mul_0_1_reg_1184_pp1_iter8_reg;
wire   [63:0] grp_fu_511_p2;
reg   [63:0] mul_0_2_reg_1189;
reg   [63:0] mul_0_2_reg_1189_pp1_iter7_reg;
reg   [63:0] mul_0_2_reg_1189_pp1_iter8_reg;
reg   [63:0] mul_0_2_reg_1189_pp1_iter9_reg;
reg   [63:0] mul_0_2_reg_1189_pp1_iter10_reg;
reg   [63:0] mul_0_2_reg_1189_pp1_iter11_reg;
reg   [63:0] mul_0_2_reg_1189_pp1_iter12_reg;
wire   [63:0] grp_fu_459_p2;
reg   [63:0] sum_s_reg_1194;
wire   [63:0] grp_fu_464_p2;
reg   [63:0] sum_14_0_1_reg_1204;
reg   [63:0] line_buffer_1_1_load_3_reg_1209;
reg    ap_enable_reg_pp1_iter13;
reg   [63:0] line_buffer_1_1_load_3_reg_1209_pp1_iter14_reg;
wire   [63:0] grp_fu_468_p2;
reg   [63:0] sum_14_0_2_reg_1215;
wire   [63:0] grp_fu_515_p2;
reg   [63:0] mul_1_reg_1220;
wire   [63:0] grp_fu_520_p2;
reg   [63:0] mul_1_1_reg_1225;
reg   [63:0] mul_1_1_reg_1225_pp1_iter18_reg;
reg   [63:0] mul_1_1_reg_1225_pp1_iter19_reg;
reg   [63:0] mul_1_1_reg_1225_pp1_iter20_reg;
wire   [63:0] grp_fu_525_p2;
reg   [63:0] mul_1_2_reg_1230;
reg   [63:0] mul_1_2_reg_1230_pp1_iter19_reg;
reg   [63:0] mul_1_2_reg_1230_pp1_iter20_reg;
reg   [63:0] mul_1_2_reg_1230_pp1_iter21_reg;
reg   [63:0] mul_1_2_reg_1230_pp1_iter22_reg;
reg   [63:0] mul_1_2_reg_1230_pp1_iter23_reg;
reg   [63:0] mul_1_2_reg_1230_pp1_iter24_reg;
wire   [63:0] grp_fu_472_p2;
reg   [63:0] sum_14_1_reg_1235;
wire   [63:0] grp_fu_476_p2;
reg   [63:0] sum_14_1_1_reg_1245;
reg   [63:0] line_buffer_2_1_load_3_reg_1250;
reg    ap_enable_reg_pp1_iter25;
reg   [63:0] line_buffer_2_1_load_3_reg_1250_pp1_iter26_reg;
wire   [63:0] grp_fu_480_p2;
reg   [63:0] sum_14_1_2_reg_1256;
wire   [63:0] grp_fu_529_p2;
reg   [63:0] mul_2_reg_1261;
wire   [63:0] grp_fu_534_p2;
reg   [63:0] mul_2_1_reg_1266;
reg   [63:0] mul_2_1_reg_1266_pp1_iter30_reg;
reg   [63:0] mul_2_1_reg_1266_pp1_iter31_reg;
reg   [63:0] mul_2_1_reg_1266_pp1_iter32_reg;
wire   [63:0] grp_fu_539_p2;
reg   [63:0] mul_2_2_reg_1271;
reg   [63:0] mul_2_2_reg_1271_pp1_iter31_reg;
reg   [63:0] mul_2_2_reg_1271_pp1_iter32_reg;
reg   [63:0] mul_2_2_reg_1271_pp1_iter33_reg;
reg   [63:0] mul_2_2_reg_1271_pp1_iter34_reg;
reg   [63:0] mul_2_2_reg_1271_pp1_iter35_reg;
reg   [63:0] mul_2_2_reg_1271_pp1_iter36_reg;
wire   [63:0] grp_fu_484_p2;
reg   [63:0] sum_14_2_reg_1276;
wire   [63:0] grp_fu_488_p2;
reg   [63:0] sum_14_2_1_reg_1281;
wire   [63:0] grp_fu_492_p2;
reg   [63:0] sum_14_2_2_reg_1286;
wire   [63:0] grp_fu_496_p2;
reg   [63:0] sum_reg_1291;
reg   [63:0] sum_reg_1291_pp1_iter45_reg;
wire   [4:0] add_ln41_fu_945_p2;
wire    ap_CS_fsm_state55;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter21;
reg    ap_enable_reg_pp1_iter22;
reg    ap_enable_reg_pp1_iter23;
reg    ap_enable_reg_pp1_iter24;
reg    ap_enable_reg_pp1_iter26;
reg    ap_condition_pp1_exit_iter25_state33;
reg    ap_enable_reg_pp1_iter27;
reg    ap_enable_reg_pp1_iter28;
reg    ap_enable_reg_pp1_iter29;
reg    ap_enable_reg_pp1_iter30;
reg    ap_enable_reg_pp1_iter31;
reg    ap_enable_reg_pp1_iter32;
reg    ap_enable_reg_pp1_iter33;
reg    ap_enable_reg_pp1_iter34;
reg    ap_enable_reg_pp1_iter35;
reg    ap_enable_reg_pp1_iter36;
reg    ap_enable_reg_pp1_iter37;
reg    ap_enable_reg_pp1_iter38;
reg    ap_enable_reg_pp1_iter39;
reg    ap_enable_reg_pp1_iter40;
reg    ap_enable_reg_pp1_iter41;
reg    ap_enable_reg_pp1_iter42;
reg    ap_enable_reg_pp1_iter43;
reg    ap_enable_reg_pp1_iter44;
reg    ap_enable_reg_pp1_iter45;
reg    ap_enable_reg_pp1_iter46;
reg   [8:0] indvar_flatten_reg_341;
reg   [4:0] num_channel_reg_352;
reg   [4:0] i_reg_363;
wire    ap_block_pp1_stage0;
reg   [63:0] ap_phi_mux_window_buffer_load_0_phi_fu_409_p4;
reg   [63:0] ap_phi_mux_window_buffer_load_1_phi_fu_430_p4;
reg   [63:0] ap_phi_mux_window_buffer_load_2_phi_fu_451_p4;
wire   [63:0] zext_ln39_5_fu_682_p1;
wire   [63:0] zext_ln39_6_fu_693_p1;
wire   [63:0] zext_ln39_7_fu_704_p1;
wire   [63:0] zext_ln39_8_fu_715_p1;
wire   [63:0] zext_ln39_9_fu_726_p1;
wire   [63:0] zext_ln39_10_fu_737_p1;
wire   [63:0] zext_ln39_11_fu_748_p1;
wire   [63:0] zext_ln39_12_fu_759_p1;
wire   [63:0] zext_ln39_13_fu_770_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0_01001;
wire   [31:0] shl_ln_fu_548_p3;
wire   [3:0] empty_fu_594_p1;
wire   [6:0] p_shl_fu_598_p3;
wire   [7:0] empty_38_fu_610_p0;
wire   [7:0] empty_38_fu_610_p1;
wire   [0:0] icmp_ln41_fu_628_p2;
wire   [4:0] add_ln39_12_fu_642_p2;
wire   [3:0] empty_44_fu_652_p1;
wire   [6:0] p_shl_mid1_fu_656_p3;
wire   [7:0] p_mid1_fu_668_p0;
wire   [7:0] p_mid1_fu_668_p1;
wire   [7:0] p_mid1_fu_668_p2;
wire   [7:0] empty_38_fu_610_p2;
wire   [7:0] select_ln39_13_fu_674_p3;
wire   [7:0] add_ln39_4_fu_687_p2;
wire   [7:0] add_ln39_5_fu_698_p2;
wire   [7:0] add_ln39_6_fu_709_p2;
wire   [7:0] add_ln39_7_fu_720_p2;
wire   [7:0] add_ln39_8_fu_731_p2;
wire   [7:0] add_ln39_9_fu_742_p2;
wire   [7:0] add_ln39_10_fu_753_p2;
wire   [7:0] add_ln39_11_fu_764_p2;
wire   [0:0] icmp_ln45_8_fu_783_p2;
wire   [0:0] icmp_ln45_9_fu_788_p2;
wire   [31:0] j_cast_fu_799_p1;
wire   [0:0] icmp_ln45_4_fu_826_p2;
wire   [0:0] icmp_ln45_fu_820_p2;
wire   [0:0] or_ln45_7_fu_831_p2;
wire   [0:0] or_ln45_8_fu_837_p2;
wire   [3:0] tmp_3_fu_850_p4;
wire   [31:0] b_cast_fu_865_p1;
wire   [4:0] empty_42_fu_884_p1;
wire   [4:0] empty_42_fu_884_p2;
wire   [63:0] bitcast_ln11_fu_895_p1;
wire   [10:0] tmp_fu_898_p4;
wire   [51:0] trunc_ln11_fu_908_p1;
wire   [0:0] icmp_ln11_4_fu_918_p2;
wire   [0:0] icmp_ln11_fu_912_p2;
wire   [0:0] or_ln11_fu_924_p2;
wire   [0:0] grp_fu_543_p2;
wire   [0:0] and_ln11_fu_930_p2;
wire    ap_block_pp1_stage0_00001;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp1_iter23 = 1'b0;
#0 ap_enable_reg_pp1_iter24 = 1'b0;
#0 ap_enable_reg_pp1_iter26 = 1'b0;
#0 ap_enable_reg_pp1_iter27 = 1'b0;
#0 ap_enable_reg_pp1_iter28 = 1'b0;
#0 ap_enable_reg_pp1_iter29 = 1'b0;
#0 ap_enable_reg_pp1_iter30 = 1'b0;
#0 ap_enable_reg_pp1_iter31 = 1'b0;
#0 ap_enable_reg_pp1_iter32 = 1'b0;
#0 ap_enable_reg_pp1_iter33 = 1'b0;
#0 ap_enable_reg_pp1_iter34 = 1'b0;
#0 ap_enable_reg_pp1_iter35 = 1'b0;
#0 ap_enable_reg_pp1_iter36 = 1'b0;
#0 ap_enable_reg_pp1_iter37 = 1'b0;
#0 ap_enable_reg_pp1_iter38 = 1'b0;
#0 ap_enable_reg_pp1_iter39 = 1'b0;
#0 ap_enable_reg_pp1_iter40 = 1'b0;
#0 ap_enable_reg_pp1_iter41 = 1'b0;
#0 ap_enable_reg_pp1_iter42 = 1'b0;
#0 ap_enable_reg_pp1_iter43 = 1'b0;
#0 ap_enable_reg_pp1_iter44 = 1'b0;
#0 ap_enable_reg_pp1_iter45 = 1'b0;
#0 ap_enable_reg_pp1_iter46 = 1'b0;
end

CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_line_buffebkb #(
    .DataWidth( 64 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
line_buffer_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_1_1_address0),
    .ce0(line_buffer_1_1_ce0),
    .q0(line_buffer_1_1_q0),
    .address1(line_buffer_1_1_address1),
    .ce1(line_buffer_1_1_ce1),
    .we1(line_buffer_1_1_we1),
    .d1(line_buffer_2_1_q0),
    .q1(line_buffer_1_1_q1)
);

CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_line_buffecud #(
    .DataWidth( 64 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
line_buffer_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_0_1_address0),
    .ce0(line_buffer_0_1_ce0),
    .we0(line_buffer_0_1_we0),
    .d0(line_buffer_1_1_q0),
    .q0(line_buffer_0_1_q0),
    .address1(line_buffer_0_1_address1),
    .ce1(line_buffer_0_1_ce1),
    .q1(line_buffer_0_1_q1)
);

CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_line_buffecud #(
    .DataWidth( 64 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
line_buffer_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buffer_2_1_address0),
    .ce0(line_buffer_2_1_ce0),
    .we0(line_buffer_2_1_we0),
    .d0(line_buffer_2_1_d0),
    .q0(line_buffer_2_1_q0),
    .address1(line_buffer_2_1_address1),
    .ce1(line_buffer_2_1_ce1),
    .q1(line_buffer_2_1_q1)
);

CNN_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s_kernel_conv7 #(
    .DataWidth( 64 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
kernel_conv7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_conv7_address0),
    .ce0(kernel_conv7_ce0),
    .q0(kernel_conv7_q0),
    .address1(kernel_conv7_address1),
    .ce1(kernel_conv7_ce1),
    .q1(kernel_conv7_q1),
    .address2(kernel_conv7_address2),
    .ce2(kernel_conv7_ce2),
    .q2(kernel_conv7_q2),
    .address3(kernel_conv7_address3),
    .ce3(kernel_conv7_ce3),
    .q3(kernel_conv7_q3),
    .address4(kernel_conv7_address4),
    .ce4(kernel_conv7_ce4),
    .q4(kernel_conv7_q4),
    .address5(kernel_conv7_address5),
    .ce5(kernel_conv7_ce5),
    .q5(kernel_conv7_q5),
    .address6(kernel_conv7_address6),
    .ce6(kernel_conv7_ce6),
    .q6(kernel_conv7_q6),
    .address7(kernel_conv7_address7),
    .ce7(kernel_conv7_ce7),
    .q7(kernel_conv7_q7),
    .address8(kernel_conv7_address8),
    .ce8(kernel_conv7_ce8),
    .q8(kernel_conv7_q8)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U310(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_reg_1179),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_459_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U311(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_s_reg_1194),
    .din1(mul_0_1_reg_1184_pp1_iter8_reg),
    .ce(1'b1),
    .dout(grp_fu_464_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U312(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_14_0_1_reg_1204),
    .din1(mul_0_2_reg_1189_pp1_iter12_reg),
    .ce(1'b1),
    .dout(grp_fu_468_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U313(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_14_0_2_reg_1215),
    .din1(mul_1_reg_1220),
    .ce(1'b1),
    .dout(grp_fu_472_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U314(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_14_1_reg_1235),
    .din1(mul_1_1_reg_1225_pp1_iter20_reg),
    .ce(1'b1),
    .dout(grp_fu_476_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U315(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_14_1_1_reg_1245),
    .din1(mul_1_2_reg_1230_pp1_iter24_reg),
    .ce(1'b1),
    .dout(grp_fu_480_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U316(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_14_1_2_reg_1256),
    .din1(mul_2_reg_1261),
    .ce(1'b1),
    .dout(grp_fu_484_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U317(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_14_2_reg_1276),
    .din1(mul_2_1_reg_1266_pp1_iter32_reg),
    .ce(1'b1),
    .dout(grp_fu_488_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U318(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_14_2_1_reg_1281),
    .din1(mul_2_2_reg_1271_pp1_iter36_reg),
    .ce(1'b1),
    .dout(grp_fu_492_p2)
);

CNN_CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dadd_64ns_64ns_64_4_full_dsp_1_U319(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_14_2_2_reg_1286),
    .din1(64'd13822689665602408863),
    .ce(1'b1),
    .dout(grp_fu_496_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U320(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_window_buffer_load_0_phi_fu_409_p4),
    .din1(kernel_conv7_load_reg_1044),
    .ce(1'b1),
    .dout(grp_fu_501_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U321(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_7_0_reg_396),
    .din1(kernel_conv7_load_1_reg_1049),
    .ce(1'b1),
    .dout(grp_fu_506_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U322(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(line_buffer_0_1_load_2_reg_1173_pp1_iter2_reg),
    .din1(kernel_conv7_load_2_reg_1054),
    .ce(1'b1),
    .dout(grp_fu_511_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U323(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_window_buffer_load_1_phi_fu_430_p4),
    .din1(kernel_conv7_load_3_reg_1059),
    .ce(1'b1),
    .dout(grp_fu_515_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U324(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_7_1_reg_417),
    .din1(kernel_conv7_load_4_reg_1064),
    .ce(1'b1),
    .dout(grp_fu_520_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U325(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(line_buffer_1_1_load_3_reg_1209_pp1_iter14_reg),
    .din1(kernel_conv7_load_5_reg_1069),
    .ce(1'b1),
    .dout(grp_fu_525_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U326(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_window_buffer_load_2_phi_fu_451_p4),
    .din1(kernel_conv7_load_6_reg_1074),
    .ce(1'b1),
    .dout(grp_fu_529_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U327(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_7_2_reg_438),
    .din1(kernel_conv7_load_7_reg_1079),
    .ce(1'b1),
    .dout(grp_fu_534_p2)
);

CNN_CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_dmul_64ns_64ns_64_4_max_dsp_1_U328(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(line_buffer_2_1_load_3_reg_1250_pp1_iter26_reg),
    .din1(kernel_conv7_load_8_reg_1084),
    .ce(1'b1),
    .dout(grp_fu_539_p2)
);

CNN_CNN_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
CNN_dcmp_64ns_64ns_1_2_no_dsp_1_U329(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_reg_1291),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_543_p2)
);

CNN_CNN_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_add_32ns_32ns_32_1_1_U330(
    .din0(shl_ln_fu_548_p3),
    .din1(32'd28),
    .dout(add_ln31_fu_556_p2)
);

CNN_CNN_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_add_32ns_32ns_32_1_1_U331(
    .din0(shl_ln_fu_548_p3),
    .din1(32'd27),
    .dout(sub13_fu_568_p2)
);

CNN_CNN_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_add_32ns_32ns_32_1_1_U332(
    .din0(shl_ln_fu_548_p3),
    .din1(32'd26),
    .dout(sub47_fu_574_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U333(
    .din0(empty_38_fu_610_p0),
    .din1(empty_38_fu_610_p1),
    .dout(empty_38_fu_610_p2)
);

CNN_CNN_add_9ns_9ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
CNN_add_9ns_9ns_9_1_1_U334(
    .din0(9'd1),
    .din1(indvar_flatten_reg_341),
    .dout(add_ln39_fu_622_p2)
);

CNN_CNN_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
CNN_add_5ns_5ns_5_1_1_U335(
    .din0(5'd1),
    .din1(num_channel_reg_352),
    .dout(add_ln39_12_fu_642_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U336(
    .din0(p_mid1_fu_668_p0),
    .din1(p_mid1_fu_668_p1),
    .dout(p_mid1_fu_668_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U337(
    .din0(8'd1),
    .din1(select_ln39_13_fu_674_p3),
    .dout(add_ln39_4_fu_687_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U338(
    .din0(8'd2),
    .din1(select_ln39_13_fu_674_p3),
    .dout(add_ln39_5_fu_698_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U339(
    .din0(8'd3),
    .din1(select_ln39_13_fu_674_p3),
    .dout(add_ln39_6_fu_709_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U340(
    .din0(8'd4),
    .din1(select_ln39_13_fu_674_p3),
    .dout(add_ln39_7_fu_720_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U341(
    .din0(8'd5),
    .din1(select_ln39_13_fu_674_p3),
    .dout(add_ln39_8_fu_731_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U342(
    .din0(8'd6),
    .din1(select_ln39_13_fu_674_p3),
    .dout(add_ln39_9_fu_742_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U343(
    .din0(8'd7),
    .din1(select_ln39_13_fu_674_p3),
    .dout(add_ln39_10_fu_753_p2)
);

CNN_CNN_add_8ns_8ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
CNN_add_8ns_8ns_8_1_1_U344(
    .din0(8'd8),
    .din1(select_ln39_13_fu_674_p3),
    .dout(add_ln39_11_fu_764_p2)
);

CNN_CNN_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
CNN_add_5ns_5ns_5_1_1_U345(
    .din0(j_reg_374),
    .din1(5'd1),
    .dout(add_ln42_fu_808_p2)
);

CNN_CNN_add_31ns_31ns_31_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
CNN_add_31ns_31ns_31_1_1_U346(
    .din0(b_reg_385),
    .din1(31'd1),
    .dout(add_ln64_fu_874_p2)
);

CNN_CNN_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
CNN_add_5ns_5ns_5_1_1_U347(
    .din0(5'd2),
    .din1(empty_42_fu_884_p1),
    .dout(empty_42_fu_884_p2)
);

CNN_CNN_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
CNN_add_5ns_5ns_5_1_1_U348(
    .din0(select_ln39_reg_986),
    .din1(5'd1),
    .dout(add_ln41_fu_945_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln42_reg_955 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln42_reg_955 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter25_state33)) begin
                ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter24;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter44 <= ap_enable_reg_pp1_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter45 <= ap_enable_reg_pp1_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter46 <= ap_enable_reg_pp1_iter45;
        end else if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter46 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        b_reg_385 <= 31'd0;
    end else if (((icmp_ln64_fu_869_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        b_reg_385 <= add_ln64_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        i_reg_363 <= add_ln41_fu_945_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_363 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten_reg_341 <= add_ln39_reg_981;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_341 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln42_reg_955 == 1'd1))) begin
        j_reg_374 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_4_fu_803_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_374 <= add_ln42_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        num_channel_reg_352 <= select_ln39_14_reg_1039;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        num_channel_reg_352 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        window_buffer_load_0_reg_406 <= line_buffer_0_1_q0;
    end else if (((icmp_ln64_reg_1153_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        window_buffer_load_0_reg_406 <= window_buffer_load_7_0_reg_396;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        window_buffer_load_1_reg_427 <= line_buffer_1_1_q0;
    end else if (((icmp_ln64_reg_1153_pp1_iter13_reg == 1'd0) & (ap_enable_reg_pp1_iter14 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        window_buffer_load_1_reg_427 <= window_buffer_load_7_1_reg_417;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        window_buffer_load_2_reg_448 <= line_buffer_2_1_q0;
    end else if (((icmp_ln64_reg_1153_pp1_iter25_reg == 1'd0) & (ap_enable_reg_pp1_iter26 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        window_buffer_load_2_reg_448 <= window_buffer_load_7_2_reg_438;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        window_buffer_load_7_0_reg_396 <= line_buffer_0_1_q1;
    end else if (((icmp_ln64_reg_1153_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        window_buffer_load_7_0_reg_396 <= line_buffer_0_1_load_2_reg_1173;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        window_buffer_load_7_1_reg_417 <= line_buffer_1_1_q1;
    end else if (((icmp_ln64_reg_1153_pp1_iter13_reg == 1'd0) & (ap_enable_reg_pp1_iter14 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        window_buffer_load_7_1_reg_417 <= line_buffer_1_1_load_3_reg_1209;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        window_buffer_load_7_2_reg_438 <= line_buffer_2_1_q1;
    end else if (((icmp_ln64_reg_1153_pp1_iter25_reg == 1'd0) & (ap_enable_reg_pp1_iter26 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        window_buffer_load_7_2_reg_438 <= line_buffer_2_1_load_3_reg_1250;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        add_ln31_reg_950 <= add_ln31_fu_556_p2;
        bitcast_ln49_reg_973 <= bitcast_ln49_fu_586_p1;
        cmp4827_reg_969 <= cmp4827_fu_580_p2;
        icmp_ln42_reg_955 <= icmp_ln42_fu_562_p2;
        sub13_reg_959 <= sub13_fu_568_p2;
        sub47_reg_964 <= sub47_fu_574_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln39_reg_981 <= add_ln39_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln42_4_reg_1094 <= icmp_ln42_4_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln64_reg_1153 <= icmp_ln64_fu_869_p2;
        icmp_ln64_reg_1153_pp1_iter1_reg <= icmp_ln64_reg_1153;
        p_cast4_reg_1162_pp1_iter1_reg[4 : 0] <= p_cast4_reg_1162[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln64_reg_1153_pp1_iter10_reg <= icmp_ln64_reg_1153_pp1_iter9_reg;
        icmp_ln64_reg_1153_pp1_iter11_reg <= icmp_ln64_reg_1153_pp1_iter10_reg;
        icmp_ln64_reg_1153_pp1_iter12_reg <= icmp_ln64_reg_1153_pp1_iter11_reg;
        icmp_ln64_reg_1153_pp1_iter13_reg <= icmp_ln64_reg_1153_pp1_iter12_reg;
        icmp_ln64_reg_1153_pp1_iter14_reg <= icmp_ln64_reg_1153_pp1_iter13_reg;
        icmp_ln64_reg_1153_pp1_iter15_reg <= icmp_ln64_reg_1153_pp1_iter14_reg;
        icmp_ln64_reg_1153_pp1_iter16_reg <= icmp_ln64_reg_1153_pp1_iter15_reg;
        icmp_ln64_reg_1153_pp1_iter17_reg <= icmp_ln64_reg_1153_pp1_iter16_reg;
        icmp_ln64_reg_1153_pp1_iter18_reg <= icmp_ln64_reg_1153_pp1_iter17_reg;
        icmp_ln64_reg_1153_pp1_iter19_reg <= icmp_ln64_reg_1153_pp1_iter18_reg;
        icmp_ln64_reg_1153_pp1_iter20_reg <= icmp_ln64_reg_1153_pp1_iter19_reg;
        icmp_ln64_reg_1153_pp1_iter21_reg <= icmp_ln64_reg_1153_pp1_iter20_reg;
        icmp_ln64_reg_1153_pp1_iter22_reg <= icmp_ln64_reg_1153_pp1_iter21_reg;
        icmp_ln64_reg_1153_pp1_iter23_reg <= icmp_ln64_reg_1153_pp1_iter22_reg;
        icmp_ln64_reg_1153_pp1_iter24_reg <= icmp_ln64_reg_1153_pp1_iter23_reg;
        icmp_ln64_reg_1153_pp1_iter25_reg <= icmp_ln64_reg_1153_pp1_iter24_reg;
        icmp_ln64_reg_1153_pp1_iter26_reg <= icmp_ln64_reg_1153_pp1_iter25_reg;
        icmp_ln64_reg_1153_pp1_iter27_reg <= icmp_ln64_reg_1153_pp1_iter26_reg;
        icmp_ln64_reg_1153_pp1_iter28_reg <= icmp_ln64_reg_1153_pp1_iter27_reg;
        icmp_ln64_reg_1153_pp1_iter29_reg <= icmp_ln64_reg_1153_pp1_iter28_reg;
        icmp_ln64_reg_1153_pp1_iter2_reg <= icmp_ln64_reg_1153_pp1_iter1_reg;
        icmp_ln64_reg_1153_pp1_iter30_reg <= icmp_ln64_reg_1153_pp1_iter29_reg;
        icmp_ln64_reg_1153_pp1_iter31_reg <= icmp_ln64_reg_1153_pp1_iter30_reg;
        icmp_ln64_reg_1153_pp1_iter32_reg <= icmp_ln64_reg_1153_pp1_iter31_reg;
        icmp_ln64_reg_1153_pp1_iter33_reg <= icmp_ln64_reg_1153_pp1_iter32_reg;
        icmp_ln64_reg_1153_pp1_iter34_reg <= icmp_ln64_reg_1153_pp1_iter33_reg;
        icmp_ln64_reg_1153_pp1_iter35_reg <= icmp_ln64_reg_1153_pp1_iter34_reg;
        icmp_ln64_reg_1153_pp1_iter36_reg <= icmp_ln64_reg_1153_pp1_iter35_reg;
        icmp_ln64_reg_1153_pp1_iter37_reg <= icmp_ln64_reg_1153_pp1_iter36_reg;
        icmp_ln64_reg_1153_pp1_iter38_reg <= icmp_ln64_reg_1153_pp1_iter37_reg;
        icmp_ln64_reg_1153_pp1_iter39_reg <= icmp_ln64_reg_1153_pp1_iter38_reg;
        icmp_ln64_reg_1153_pp1_iter3_reg <= icmp_ln64_reg_1153_pp1_iter2_reg;
        icmp_ln64_reg_1153_pp1_iter40_reg <= icmp_ln64_reg_1153_pp1_iter39_reg;
        icmp_ln64_reg_1153_pp1_iter41_reg <= icmp_ln64_reg_1153_pp1_iter40_reg;
        icmp_ln64_reg_1153_pp1_iter42_reg <= icmp_ln64_reg_1153_pp1_iter41_reg;
        icmp_ln64_reg_1153_pp1_iter43_reg <= icmp_ln64_reg_1153_pp1_iter42_reg;
        icmp_ln64_reg_1153_pp1_iter44_reg <= icmp_ln64_reg_1153_pp1_iter43_reg;
        icmp_ln64_reg_1153_pp1_iter45_reg <= icmp_ln64_reg_1153_pp1_iter44_reg;
        icmp_ln64_reg_1153_pp1_iter4_reg <= icmp_ln64_reg_1153_pp1_iter3_reg;
        icmp_ln64_reg_1153_pp1_iter5_reg <= icmp_ln64_reg_1153_pp1_iter4_reg;
        icmp_ln64_reg_1153_pp1_iter6_reg <= icmp_ln64_reg_1153_pp1_iter5_reg;
        icmp_ln64_reg_1153_pp1_iter7_reg <= icmp_ln64_reg_1153_pp1_iter6_reg;
        icmp_ln64_reg_1153_pp1_iter8_reg <= icmp_ln64_reg_1153_pp1_iter7_reg;
        icmp_ln64_reg_1153_pp1_iter9_reg <= icmp_ln64_reg_1153_pp1_iter8_reg;
        line_buffer_0_1_load_2_reg_1173_pp1_iter2_reg <= line_buffer_0_1_load_2_reg_1173;
        line_buffer_1_1_load_3_reg_1209_pp1_iter14_reg <= line_buffer_1_1_load_3_reg_1209;
        line_buffer_2_1_load_3_reg_1250_pp1_iter26_reg <= line_buffer_2_1_load_3_reg_1250;
        mul_0_1_reg_1184_pp1_iter6_reg <= mul_0_1_reg_1184;
        mul_0_1_reg_1184_pp1_iter7_reg <= mul_0_1_reg_1184_pp1_iter6_reg;
        mul_0_1_reg_1184_pp1_iter8_reg <= mul_0_1_reg_1184_pp1_iter7_reg;
        mul_0_2_reg_1189_pp1_iter10_reg <= mul_0_2_reg_1189_pp1_iter9_reg;
        mul_0_2_reg_1189_pp1_iter11_reg <= mul_0_2_reg_1189_pp1_iter10_reg;
        mul_0_2_reg_1189_pp1_iter12_reg <= mul_0_2_reg_1189_pp1_iter11_reg;
        mul_0_2_reg_1189_pp1_iter7_reg <= mul_0_2_reg_1189;
        mul_0_2_reg_1189_pp1_iter8_reg <= mul_0_2_reg_1189_pp1_iter7_reg;
        mul_0_2_reg_1189_pp1_iter9_reg <= mul_0_2_reg_1189_pp1_iter8_reg;
        mul_1_1_reg_1225_pp1_iter18_reg <= mul_1_1_reg_1225;
        mul_1_1_reg_1225_pp1_iter19_reg <= mul_1_1_reg_1225_pp1_iter18_reg;
        mul_1_1_reg_1225_pp1_iter20_reg <= mul_1_1_reg_1225_pp1_iter19_reg;
        mul_1_2_reg_1230_pp1_iter19_reg <= mul_1_2_reg_1230;
        mul_1_2_reg_1230_pp1_iter20_reg <= mul_1_2_reg_1230_pp1_iter19_reg;
        mul_1_2_reg_1230_pp1_iter21_reg <= mul_1_2_reg_1230_pp1_iter20_reg;
        mul_1_2_reg_1230_pp1_iter22_reg <= mul_1_2_reg_1230_pp1_iter21_reg;
        mul_1_2_reg_1230_pp1_iter23_reg <= mul_1_2_reg_1230_pp1_iter22_reg;
        mul_1_2_reg_1230_pp1_iter24_reg <= mul_1_2_reg_1230_pp1_iter23_reg;
        mul_2_1_reg_1266_pp1_iter30_reg <= mul_2_1_reg_1266;
        mul_2_1_reg_1266_pp1_iter31_reg <= mul_2_1_reg_1266_pp1_iter30_reg;
        mul_2_1_reg_1266_pp1_iter32_reg <= mul_2_1_reg_1266_pp1_iter31_reg;
        mul_2_2_reg_1271_pp1_iter31_reg <= mul_2_2_reg_1271;
        mul_2_2_reg_1271_pp1_iter32_reg <= mul_2_2_reg_1271_pp1_iter31_reg;
        mul_2_2_reg_1271_pp1_iter33_reg <= mul_2_2_reg_1271_pp1_iter32_reg;
        mul_2_2_reg_1271_pp1_iter34_reg <= mul_2_2_reg_1271_pp1_iter33_reg;
        mul_2_2_reg_1271_pp1_iter35_reg <= mul_2_2_reg_1271_pp1_iter34_reg;
        mul_2_2_reg_1271_pp1_iter36_reg <= mul_2_2_reg_1271_pp1_iter35_reg;
        p_cast4_reg_1162_pp1_iter10_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter9_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter11_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter10_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter12_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter11_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter13_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter12_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter14_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter13_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter15_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter14_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter16_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter15_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter17_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter16_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter18_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter17_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter19_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter18_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter20_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter19_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter21_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter20_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter22_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter21_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter23_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter22_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter2_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter1_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter3_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter2_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter4_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter3_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter5_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter4_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter6_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter5_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter7_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter6_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter8_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter7_reg[4 : 0];
        p_cast4_reg_1162_pp1_iter9_reg[4 : 0] <= p_cast4_reg_1162_pp1_iter8_reg[4 : 0];
        sum_reg_1291_pp1_iter45_reg <= sum_reg_1291;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_4_fu_803_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_cast3_reg_1103[4 : 0] <= j_cast3_fu_814_p1[4 : 0];
        line_buffer_1_1_addr_reg_1108 <= j_cast3_fu_814_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_conv7_load_1_reg_1049 <= kernel_conv7_q1;
        kernel_conv7_load_2_reg_1054 <= kernel_conv7_q2;
        kernel_conv7_load_3_reg_1059 <= kernel_conv7_q3;
        kernel_conv7_load_4_reg_1064 <= kernel_conv7_q4;
        kernel_conv7_load_5_reg_1069 <= kernel_conv7_q5;
        kernel_conv7_load_6_reg_1074 <= kernel_conv7_q6;
        kernel_conv7_load_7_reg_1079 <= kernel_conv7_q7;
        kernel_conv7_load_8_reg_1084 <= kernel_conv7_q8;
        kernel_conv7_load_reg_1044 <= kernel_conv7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        line_buffer_0_1_load_2_reg_1173 <= line_buffer_0_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter12_reg == 1'd0) & (ap_enable_reg_pp1_iter13 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        line_buffer_1_1_load_3_reg_1209 <= line_buffer_1_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter24_reg == 1'd0) & (ap_enable_reg_pp1_iter25 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        line_buffer_2_1_load_3_reg_1250 <= line_buffer_2_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_0_1_reg_1184 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_0_2_reg_1189 <= grp_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter16_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_1_1_reg_1225 <= grp_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter17_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_1_2_reg_1230 <= grp_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter15_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_1_reg_1220 <= grp_fu_515_p2;
        sum_14_0_2_reg_1215 <= grp_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter28_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_2_1_reg_1266 <= grp_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter29_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_2_2_reg_1271 <= grp_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter27_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_2_reg_1261 <= grp_fu_529_p2;
        sum_14_1_2_reg_1256 <= grp_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        mul_reg_1179 <= grp_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln42_reg_955 == 1'd1))) begin
        or_ln45_reg_1089 <= or_ln45_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_fu_869_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_cast4_reg_1162[4 : 0] <= p_cast4_fu_890_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        select_ln39_14_reg_1039 <= select_ln39_14_fu_775_p3;
        select_ln39_reg_986 <= select_ln39_fu_634_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter11_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_14_0_1_reg_1204 <= grp_fu_464_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter23_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_14_1_1_reg_1245 <= grp_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter19_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_14_1_reg_1235 <= grp_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter35_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_14_2_1_reg_1281 <= grp_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter39_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_14_2_2_reg_1286 <= grp_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter31_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_14_2_reg_1276 <= grp_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter43_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_reg_1291 <= grp_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln64_reg_1153_pp1_iter7_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sum_s_reg_1194 <= grp_fu_459_p2;
    end
end

always @ (*) begin
    if ((icmp_ln42_4_fu_803_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter25 == 1'b1))) begin
        ap_condition_pp1_exit_iter25_state33 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter25_state33 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln64_fu_869_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln39_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter46 == 1'b0) & (ap_enable_reg_pp1_iter45 == 1'b0) & (ap_enable_reg_pp1_iter44 == 1'b0) & (ap_enable_reg_pp1_iter43 == 1'b0) & (ap_enable_reg_pp1_iter42 == 1'b0) & (ap_enable_reg_pp1_iter41 == 1'b0) & (ap_enable_reg_pp1_iter40 == 1'b0) & (ap_enable_reg_pp1_iter39 == 1'b0) & (ap_enable_reg_pp1_iter38 == 1'b0) & (ap_enable_reg_pp1_iter37 == 1'b0) & (ap_enable_reg_pp1_iter36 == 1'b0) & (ap_enable_reg_pp1_iter35 == 1'b0) & (ap_enable_reg_pp1_iter34 == 1'b0) & (ap_enable_reg_pp1_iter33 == 1'b0) & (ap_enable_reg_pp1_iter32 == 1'b0) & (ap_enable_reg_pp1_iter31 == 1'b0) & (ap_enable_reg_pp1_iter30 == 1'b0) & (ap_enable_reg_pp1_iter29 == 1'b0) & (ap_enable_reg_pp1_iter28 == 1'b0) & (ap_enable_reg_pp1_iter27 == 1'b0) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter23 == 1'b0) & (ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter25 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln64_reg_1153_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_window_buffer_load_0_phi_fu_409_p4 = window_buffer_load_7_0_reg_396;
    end else begin
        ap_phi_mux_window_buffer_load_0_phi_fu_409_p4 = window_buffer_load_0_reg_406;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln64_reg_1153_pp1_iter13_reg == 1'd0) & (ap_enable_reg_pp1_iter14 == 1'b1))) begin
        ap_phi_mux_window_buffer_load_1_phi_fu_430_p4 = window_buffer_load_7_1_reg_417;
    end else begin
        ap_phi_mux_window_buffer_load_1_phi_fu_430_p4 = window_buffer_load_1_reg_427;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln64_reg_1153_pp1_iter25_reg == 1'd0) & (ap_enable_reg_pp1_iter26 == 1'b1))) begin
        ap_phi_mux_window_buffer_load_2_phi_fu_451_p4 = window_buffer_load_7_2_reg_438;
    end else begin
        ap_phi_mux_window_buffer_load_2_phi_fu_451_p4 = window_buffer_load_2_reg_448;
    end
end

always @ (*) begin
    if (((icmp_ln39_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce0 = 1'b1;
    end else begin
        kernel_conv7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce1 = 1'b1;
    end else begin
        kernel_conv7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce2 = 1'b1;
    end else begin
        kernel_conv7_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce3 = 1'b1;
    end else begin
        kernel_conv7_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce4 = 1'b1;
    end else begin
        kernel_conv7_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce5 = 1'b1;
    end else begin
        kernel_conv7_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce6 = 1'b1;
    end else begin
        kernel_conv7_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce7 = 1'b1;
    end else begin
        kernel_conv7_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_conv7_ce8 = 1'b1;
    end else begin
        kernel_conv7_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_0_1_address0 = 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_0_1_address0 = j_cast3_reg_1103;
    end else begin
        line_buffer_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        line_buffer_0_1_address1 = p_cast4_fu_890_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_0_1_address1 = 5'd1;
    end else begin
        line_buffer_0_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buffer_0_1_ce0 = 1'b1;
    end else begin
        line_buffer_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_0_1_ce1 = 1'b1;
    end else begin
        line_buffer_0_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_4_reg_1094 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_0_1_we0 = 1'b1;
    end else begin
        line_buffer_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter12 == 1'b1))) begin
        line_buffer_1_1_address0 = p_cast4_reg_1162_pp1_iter11_reg;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_1_1_address0 = 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_1_1_address0 = j_cast3_fu_814_p1;
    end else begin
        line_buffer_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_1_1_address1 = 5'd1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_1_1_address1 = line_buffer_1_1_addr_reg_1108;
    end else begin
        line_buffer_1_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp1_iter12 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_1_1_ce0 = 1'b1;
    end else begin
        line_buffer_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buffer_1_1_ce1 = 1'b1;
    end else begin
        line_buffer_1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_4_reg_1094 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_1_1_we1 = 1'b1;
    end else begin
        line_buffer_1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_2_1_address0 = 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln42_4_fu_803_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_2_1_address0 = j_cast3_fu_814_p1;
    end else begin
        line_buffer_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter24 == 1'b1))) begin
        line_buffer_2_1_address1 = p_cast4_reg_1162_pp1_iter23_reg;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        line_buffer_2_1_address1 = 5'd1;
    end else begin
        line_buffer_2_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_4_fu_803_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buffer_2_1_ce0 = 1'b1;
    end else begin
        line_buffer_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp1_iter24 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        line_buffer_2_1_ce1 = 1'b1;
    end else begin
        line_buffer_2_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln42_4_fu_803_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_2_1_we0 = 1'b1;
    end else begin
        line_buffer_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_reg_1153_pp1_iter45_reg == 1'd0) & (ap_enable_reg_pp1_iter46 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_conv7_ap_vld = 1'b1;
    end else begin
        output_conv7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln39_fu_616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln42_reg_955 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln42_4_fu_803_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln42_4_fu_803_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln52_fu_859_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((cmp4827_reg_969 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter25 == 1'b1)) & ~((ap_enable_reg_pp1_iter45 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter46 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter45 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter46 == 1'b1)) | ((ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter25 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln11_fu_930_p2 = (or_ln11_fu_924_p2 & grp_fu_543_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp1_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign b_cast_fu_865_p1 = b_reg_385;

assign bitcast_ln11_fu_895_p1 = sum_reg_1291_pp1_iter45_reg;

assign bitcast_ln49_fu_586_p1 = p_read;

assign cmp4827_fu_580_p2 = (($signed(sub47_fu_574_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign empty_38_fu_610_p0 = num_channel_reg_352;

assign empty_38_fu_610_p1 = p_shl_fu_598_p3;

assign empty_42_fu_884_p1 = b_reg_385[4:0];

assign empty_44_fu_652_p1 = add_ln39_12_fu_642_p2[3:0];

assign empty_fu_594_p1 = num_channel_reg_352[3:0];

assign icmp_ln11_4_fu_918_p2 = ((trunc_ln11_fu_908_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_912_p2 = ((tmp_fu_898_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_616_p2 = ((indvar_flatten_reg_341 == 9'd448) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_628_p2 = ((i_reg_363 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln42_4_fu_803_p2 = ((j_cast_fu_799_p1 == add_ln31_reg_950) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_562_p2 = (($signed(add_ln31_fu_556_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_4_fu_826_p2 = ((j_cast_fu_799_p1 == sub13_reg_959) ? 1'b1 : 1'b0);

assign icmp_ln45_8_fu_783_p2 = ((select_ln39_reg_986 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_9_fu_788_p2 = ((select_ln39_reg_986 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_820_p2 = ((j_reg_374 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_859_p2 = ((tmp_3_fu_850_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_869_p2 = ((b_cast_fu_865_p1 == sub47_reg_964) ? 1'b1 : 1'b0);

assign j_cast3_fu_814_p1 = j_reg_374;

assign j_cast_fu_799_p1 = j_reg_374;

assign kernel_conv7_address0 = zext_ln39_5_fu_682_p1;

assign kernel_conv7_address1 = zext_ln39_6_fu_693_p1;

assign kernel_conv7_address2 = zext_ln39_7_fu_704_p1;

assign kernel_conv7_address3 = zext_ln39_8_fu_715_p1;

assign kernel_conv7_address4 = zext_ln39_9_fu_726_p1;

assign kernel_conv7_address5 = zext_ln39_10_fu_737_p1;

assign kernel_conv7_address6 = zext_ln39_11_fu_748_p1;

assign kernel_conv7_address7 = zext_ln39_12_fu_759_p1;

assign kernel_conv7_address8 = zext_ln39_13_fu_770_p1;

assign line_buffer_2_1_d0 = ((or_ln45_8_fu_837_p2[0:0] === 1'b1) ? 64'd0 : bitcast_ln49_reg_973);

assign or_ln11_fu_924_p2 = (icmp_ln11_fu_912_p2 | icmp_ln11_4_fu_918_p2);

assign or_ln45_7_fu_831_p2 = (icmp_ln45_fu_820_p2 | icmp_ln45_4_fu_826_p2);

assign or_ln45_8_fu_837_p2 = (or_ln45_reg_1089 | or_ln45_7_fu_831_p2);

assign or_ln45_fu_793_p2 = (icmp_ln45_9_fu_788_p2 | icmp_ln45_8_fu_783_p2);

assign output_conv7 = ((and_ln11_fu_930_p2[0:0] === 1'b1) ? bitcast_ln11_fu_895_p1 : 64'd0);

assign p_cast4_fu_890_p1 = empty_42_fu_884_p2;

assign p_mid1_fu_668_p0 = add_ln39_12_fu_642_p2;

assign p_mid1_fu_668_p1 = p_shl_mid1_fu_656_p3;

assign p_shl_fu_598_p3 = {{empty_fu_594_p1}, {3'd0}};

assign p_shl_mid1_fu_656_p3 = {{empty_44_fu_652_p1}, {3'd0}};

assign select_ln39_13_fu_674_p3 = ((icmp_ln41_fu_628_p2[0:0] === 1'b1) ? p_mid1_fu_668_p2 : empty_38_fu_610_p2);

assign select_ln39_14_fu_775_p3 = ((icmp_ln41_fu_628_p2[0:0] === 1'b1) ? add_ln39_12_fu_642_p2 : num_channel_reg_352);

assign select_ln39_fu_634_p3 = ((icmp_ln41_fu_628_p2[0:0] === 1'b1) ? 5'd0 : i_reg_363);

assign shl_ln_fu_548_p3 = {{padding}, {1'd0}};

assign tmp_3_fu_850_p4 = {{select_ln39_reg_986[4:1]}};

assign tmp_fu_898_p4 = {{bitcast_ln11_fu_895_p1[62:52]}};

assign trunc_ln11_fu_908_p1 = bitcast_ln11_fu_895_p1[51:0];

assign zext_ln39_10_fu_737_p1 = add_ln39_8_fu_731_p2;

assign zext_ln39_11_fu_748_p1 = add_ln39_9_fu_742_p2;

assign zext_ln39_12_fu_759_p1 = add_ln39_10_fu_753_p2;

assign zext_ln39_13_fu_770_p1 = add_ln39_11_fu_764_p2;

assign zext_ln39_5_fu_682_p1 = select_ln39_13_fu_674_p3;

assign zext_ln39_6_fu_693_p1 = add_ln39_4_fu_687_p2;

assign zext_ln39_7_fu_704_p1 = add_ln39_5_fu_698_p2;

assign zext_ln39_8_fu_715_p1 = add_ln39_6_fu_709_p2;

assign zext_ln39_9_fu_726_p1 = add_ln39_7_fu_720_p2;

always @ (posedge ap_clk) begin
    j_cast3_reg_1103[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter4_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter5_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter6_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter7_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter8_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter9_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter10_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter11_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter12_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter13_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter14_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter15_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter16_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter17_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter18_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter19_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter20_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter21_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter22_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_1162_pp1_iter23_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //CNN_convolution_double_double_double_double_28_28_16_1_28_28_3_3_1_0_s
