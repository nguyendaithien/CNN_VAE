// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_VITIS_LOOP_118_1_VITIS_LOOP_119_2_VITIS_LOOP_120_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln118_1,
        bound7,
        bound,
        cmp17_i_mid116,
        sext_ln118,
        empty,
        output_conv1_load,
        output_pooling1,
        output_pooling1_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sext_ln118_1;
input  [131:0] bound7;
input  [125:0] bound;
input  [0:0] cmp17_i_mid116;
input  [31:0] sext_ln118;
input  [0:0] empty;
input  [63:0] output_conv1_load;
output  [63:0] output_pooling1;
output   output_pooling1_ap_vld;

reg ap_idle;
reg output_pooling1_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln118_fu_174_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [63:0] sext_ln118_cast_fu_125_p1;
reg  signed [63:0] sext_ln118_cast_reg_381;
wire   [127:0] bound_cast_fu_129_p1;
reg   [127:0] bound_cast_reg_387;
wire  signed [63:0] sext_ln118_1_cast_fu_133_p1;
reg  signed [63:0] sext_ln118_1_cast_reg_392;
reg   [63:0] j_fu_60;
wire   [63:0] add_ln120_fu_292_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [63:0] i_fu_64;
wire   [63:0] select_ln119_2_fu_264_p3;
reg   [127:0] indvar_flatten_fu_68;
wire   [127:0] select_ln119_3_fu_304_p3;
reg   [131:0] indvar_flatten20_fu_72;
wire   [131:0] add_ln118_fu_179_p2;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] and_ln126_fu_283_p2;
wire   [63:0] empty_36_fu_163_p2;
wire   [0:0] icmp_ln119_fu_191_p2;
wire   [0:0] cmp17_i_fu_169_p2;
wire   [0:0] icmp_ln120_fu_219_p2;
wire   [63:0] select_ln118_fu_196_p3;
wire   [0:0] select_ln118_3_fu_224_p3;
wire   [63:0] select_ln118_1_fu_204_p3;
wire   [63:0] add_ln119_fu_231_p2;
wire   [63:0] p_mid1_fu_245_p2;
wire   [0:0] select_ln118_2_fu_212_p3;
wire   [0:0] cmp17_i_mid1_fu_251_p2;
wire   [63:0] select_ln119_fu_237_p3;
wire   [63:0] or_ln126_fu_272_p2;
wire   [0:0] select_ln119_1_fu_256_p3;
wire   [0:0] icmp_ln126_fu_278_p2;
wire   [127:0] add_ln119_1_fu_298_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_64 <= 64'd0;
        end else if (((icmp_ln118_fu_174_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_64 <= select_ln119_2_fu_264_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten20_fu_72 <= 132'd0;
        end else if (((icmp_ln118_fu_174_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten20_fu_72 <= add_ln118_fu_179_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_68 <= 128'd0;
        end else if (((icmp_ln118_fu_174_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_68 <= select_ln119_3_fu_304_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_60 <= 64'd0;
        end else if (((icmp_ln118_fu_174_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_60 <= add_ln120_fu_292_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bound_cast_reg_387[125 : 0] <= bound_cast_fu_129_p1[125 : 0];
        sext_ln118_1_cast_reg_392 <= sext_ln118_1_cast_fu_133_p1;
        sext_ln118_cast_reg_381 <= sext_ln118_cast_fu_125_p1;
    end
end

always @ (*) begin
    if (((icmp_ln118_fu_174_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln126_fu_283_p2) & (icmp_ln118_fu_174_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_pooling1_ap_vld = 1'b1;
    end else begin
        output_pooling1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln118_fu_179_p2 = (indvar_flatten20_fu_72 + 132'd1);

assign add_ln119_1_fu_298_p2 = (indvar_flatten_fu_68 + 128'd1);

assign add_ln119_fu_231_p2 = (select_ln118_fu_196_p3 + 64'd2);

assign add_ln120_fu_292_p2 = (select_ln119_fu_237_p3 + 64'd2);

assign and_ln126_fu_283_p2 = (select_ln119_1_fu_256_p3 & icmp_ln126_fu_278_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign bound_cast_fu_129_p1 = bound;

assign cmp17_i_fu_169_p2 = (($signed(empty_36_fu_163_p2) < $signed(sext_ln118_1_cast_reg_392)) ? 1'b1 : 1'b0);

assign cmp17_i_mid1_fu_251_p2 = (($signed(p_mid1_fu_245_p2) < $signed(sext_ln118_1_cast_reg_392)) ? 1'b1 : 1'b0);

assign empty_36_fu_163_p2 = (i_fu_64 | 64'd1);

assign icmp_ln118_fu_174_p2 = ((indvar_flatten20_fu_72 == bound7) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_191_p2 = ((indvar_flatten_fu_68 == bound_cast_reg_387) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_219_p2 = (($signed(j_fu_60) < $signed(sext_ln118_cast_reg_381)) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_278_p2 = (($signed(or_ln126_fu_272_p2) < $signed(sext_ln118_cast_reg_381)) ? 1'b1 : 1'b0);

assign or_ln126_fu_272_p2 = (select_ln119_fu_237_p3 | 64'd1);

assign output_pooling1 = output_conv1_load;

assign p_mid1_fu_245_p2 = (64'd1 | add_ln119_fu_231_p2);

assign select_ln118_1_fu_204_p3 = ((icmp_ln119_fu_191_p2[0:0] == 1'b1) ? 64'd0 : j_fu_60);

assign select_ln118_2_fu_212_p3 = ((icmp_ln119_fu_191_p2[0:0] == 1'b1) ? cmp17_i_mid116 : cmp17_i_fu_169_p2);

assign select_ln118_3_fu_224_p3 = ((icmp_ln119_fu_191_p2[0:0] == 1'b1) ? empty : icmp_ln120_fu_219_p2);

assign select_ln118_fu_196_p3 = ((icmp_ln119_fu_191_p2[0:0] == 1'b1) ? 64'd0 : i_fu_64);

assign select_ln119_1_fu_256_p3 = ((select_ln118_3_fu_224_p3[0:0] == 1'b1) ? select_ln118_2_fu_212_p3 : cmp17_i_mid1_fu_251_p2);

assign select_ln119_2_fu_264_p3 = ((select_ln118_3_fu_224_p3[0:0] == 1'b1) ? select_ln118_fu_196_p3 : add_ln119_fu_231_p2);

assign select_ln119_3_fu_304_p3 = ((icmp_ln119_fu_191_p2[0:0] == 1'b1) ? 128'd1 : add_ln119_1_fu_298_p2);

assign select_ln119_fu_237_p3 = ((select_ln118_3_fu_224_p3[0:0] == 1'b1) ? select_ln118_1_fu_204_p3 : 64'd0);

assign sext_ln118_1_cast_fu_133_p1 = $signed(sext_ln118_1);

assign sext_ln118_cast_fu_125_p1 = $signed(sext_ln118);

always @ (posedge ap_clk) begin
    bound_cast_reg_387[127:126] <= 2'b00;
end

endmodule //CNN_CNN_Pipeline_VITIS_LOOP_118_1_VITIS_LOOP_119_2_VITIS_LOOP_120_3
