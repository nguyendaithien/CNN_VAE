-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (63 downto 0);
    output_conv1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    output_conv1_ap_vld : OUT STD_LOGIC );
end;


architecture behav of CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal line_buffer_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal line_buffer_0_ce0 : STD_LOGIC;
    signal line_buffer_0_we0 : STD_LOGIC;
    signal line_buffer_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_0_ce1 : STD_LOGIC;
    signal line_buffer_0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal line_buffer_1_ce0 : STD_LOGIC;
    signal line_buffer_1_we0 : STD_LOGIC;
    signal line_buffer_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal line_buffer_1_ce1 : STD_LOGIC;
    signal line_buffer_1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal line_buffer_2_ce0 : STD_LOGIC;
    signal line_buffer_2_we0 : STD_LOGIC;
    signal line_buffer_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_2_ce1 : STD_LOGIC;
    signal line_buffer_2_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bias_conv1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal bias_conv1_ce0 : STD_LOGIC;
    signal bias_conv1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce0 : STD_LOGIC;
    signal kernel_conv1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce1 : STD_LOGIC;
    signal kernel_conv1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce2 : STD_LOGIC;
    signal kernel_conv1_q2 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce3 : STD_LOGIC;
    signal kernel_conv1_q3 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address4 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce4 : STD_LOGIC;
    signal kernel_conv1_q4 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address5 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce5 : STD_LOGIC;
    signal kernel_conv1_q5 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address6 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce6 : STD_LOGIC;
    signal kernel_conv1_q6 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address7 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce7 : STD_LOGIC;
    signal kernel_conv1_q7 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_address8 : STD_LOGIC_VECTOR (7 downto 0);
    signal kernel_conv1_ce8 : STD_LOGIC;
    signal kernel_conv1_q8 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln53_fu_299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln53_reg_599 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln44_fu_356_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln44_reg_607 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln44_fu_371_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln44_reg_612 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln44_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln44_1_fu_411_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln44_1_reg_617 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln49_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln49_reg_672 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_reg_677 : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_conv1_load_reg_681 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal kernel_conv1_load_reg_686 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_load_1_reg_691 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_load_2_reg_696 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_load_3_reg_701 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_load_4_reg_706 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_load_5_reg_711 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_load_6_reg_716 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_load_7_reg_721 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_conv1_load_8_reg_726 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_0_load_reg_731 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal line_buffer_1_load_reg_736 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_2_load_reg_741 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_0_load_1_reg_746 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_1_load_1_reg_751 : STD_LOGIC_VECTOR (63 downto 0);
    signal line_buffer_2_load_1_reg_756 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_done : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_idle : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_ready : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_ce0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_we0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_ce1 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_ce0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_we0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_ce0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_we0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_done : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_idle : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_ready : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_output_conv1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_output_conv1_ap_vld : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_0_ce0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_1_ce0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_2_ce0 : STD_LOGIC;
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start_reg : STD_LOGIC := '0';
    signal grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln44_2_fu_419_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_3_fu_432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_4_fu_443_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_5_fu_454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_6_fu_465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_7_fu_476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_8_fu_487_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_9_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_10_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln44_11_fu_520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_86 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln45_fu_560_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal num_ker_fu_90 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_94 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_fu_328_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_fu_332_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_fu_340_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln44_fu_324_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln45_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln44_9_fu_379_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_22_fu_389_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_mid1_fu_393_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl_cast_mid1_fu_401_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln44_1_fu_385_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mid1_fu_405_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_20_fu_344_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln44_2_fu_424_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_1_fu_437_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_2_fu_448_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_3_fu_459_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_4_fu_470_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_5_fu_481_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_6_fu_492_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_7_fu_503_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_8_fu_514_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmp11_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp13_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_544_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        or_ln49 : IN STD_LOGIC_VECTOR (0 downto 0);
        bitcast_ln53 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        line_buffer_1_ce0 : OUT STD_LOGIC;
        line_buffer_1_we0 : OUT STD_LOGIC;
        line_buffer_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        line_buffer_1_ce1 : OUT STD_LOGIC;
        line_buffer_1_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        line_buffer_0_ce0 : OUT STD_LOGIC;
        line_buffer_0_we0 : OUT STD_LOGIC;
        line_buffer_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        line_buffer_2_ce0 : OUT STD_LOGIC;
        line_buffer_2_we0 : OUT STD_LOGIC;
        line_buffer_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        line_buffer_2_load_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_2_load_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_1_load_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_1_load_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_0_load_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_0_load : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load_2 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load_3 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load_4 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load_5 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load_6 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load_7 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_conv1_load_8 : IN STD_LOGIC_VECTOR (63 downto 0);
        bias_conv1_load : IN STD_LOGIC_VECTOR (63 downto 0);
        output_conv1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_conv1_ap_vld : OUT STD_LOGIC;
        line_buffer_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        line_buffer_0_ce0 : OUT STD_LOGIC;
        line_buffer_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        line_buffer_1_ce0 : OUT STD_LOGIC;
        line_buffer_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        line_buffer_2_ce0 : OUT STD_LOGIC;
        line_buffer_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_line_buffebkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_bias_conv1eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_kernel_confYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address3 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address4 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address5 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address6 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address7 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address8 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    line_buffer_0_U : component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_line_buffebkb
    generic map (
        DataWidth => 64,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_0_address0,
        ce0 => line_buffer_0_ce0,
        we0 => line_buffer_0_we0,
        d0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_d0,
        q0 => line_buffer_0_q0,
        address1 => ap_const_lv5_0,
        ce1 => line_buffer_0_ce1,
        q1 => line_buffer_0_q1);

    line_buffer_1_U : component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_line_buffebkb
    generic map (
        DataWidth => 64,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_1_address0,
        ce0 => line_buffer_1_ce0,
        we0 => line_buffer_1_we0,
        d0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_d0,
        q0 => line_buffer_1_q0,
        address1 => line_buffer_1_address1,
        ce1 => line_buffer_1_ce1,
        q1 => line_buffer_1_q1);

    line_buffer_2_U : component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_line_buffebkb
    generic map (
        DataWidth => 64,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_2_address0,
        ce0 => line_buffer_2_ce0,
        we0 => line_buffer_2_we0,
        d0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_d0,
        q0 => line_buffer_2_q0,
        address1 => ap_const_lv5_0,
        ce1 => line_buffer_2_ce1,
        q1 => line_buffer_2_q1);

    bias_conv1_U : component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_bias_conv1eOg
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_conv1_address0,
        ce0 => bias_conv1_ce0,
        q0 => bias_conv1_q0);

    kernel_conv1_U : component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_s_kernel_confYi
    generic map (
        DataWidth => 64,
        AddressRange => 144,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernel_conv1_address0,
        ce0 => kernel_conv1_ce0,
        q0 => kernel_conv1_q0,
        address1 => kernel_conv1_address1,
        ce1 => kernel_conv1_ce1,
        q1 => kernel_conv1_q1,
        address2 => kernel_conv1_address2,
        ce2 => kernel_conv1_ce2,
        q2 => kernel_conv1_q2,
        address3 => kernel_conv1_address3,
        ce3 => kernel_conv1_ce3,
        q3 => kernel_conv1_q3,
        address4 => kernel_conv1_address4,
        ce4 => kernel_conv1_ce4,
        q4 => kernel_conv1_q4,
        address5 => kernel_conv1_address5,
        ce5 => kernel_conv1_ce5,
        q5 => kernel_conv1_q5,
        address6 => kernel_conv1_address6,
        ce6 => kernel_conv1_ce6,
        q6 => kernel_conv1_q6,
        address7 => kernel_conv1_address7,
        ce7 => kernel_conv1_ce7,
        q7 => kernel_conv1_q7,
        address8 => kernel_conv1_address8,
        ce8 => kernel_conv1_ce8,
        q8 => kernel_conv1_q8);

    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259 : component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start,
        ap_done => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_done,
        ap_idle => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_idle,
        ap_ready => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_ready,
        or_ln49 => or_ln49_reg_672,
        bitcast_ln53 => bitcast_ln53_reg_599,
        line_buffer_1_address0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_address0,
        line_buffer_1_ce0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_ce0,
        line_buffer_1_we0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_we0,
        line_buffer_1_d0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_d0,
        line_buffer_1_address1 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_address1,
        line_buffer_1_ce1 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_ce1,
        line_buffer_1_q1 => line_buffer_1_q1,
        line_buffer_0_address0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_address0,
        line_buffer_0_ce0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_ce0,
        line_buffer_0_we0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_we0,
        line_buffer_0_d0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_d0,
        line_buffer_2_address0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_address0,
        line_buffer_2_ce0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_ce0,
        line_buffer_2_we0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_we0,
        line_buffer_2_d0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_d0,
        line_buffer_2_q0 => line_buffer_2_q0);

    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271 : component CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start,
        ap_done => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_done,
        ap_idle => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_idle,
        ap_ready => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_ready,
        line_buffer_2_load_2 => line_buffer_2_load_1_reg_756,
        line_buffer_2_load_1 => line_buffer_2_load_reg_741,
        line_buffer_1_load_2 => line_buffer_1_load_1_reg_751,
        line_buffer_1_load_1 => line_buffer_1_load_reg_736,
        line_buffer_0_load_1 => line_buffer_0_load_1_reg_746,
        line_buffer_0_load => line_buffer_0_load_reg_731,
        kernel_conv1_load => kernel_conv1_load_reg_686,
        kernel_conv1_load_1 => kernel_conv1_load_1_reg_691,
        kernel_conv1_load_2 => kernel_conv1_load_2_reg_696,
        kernel_conv1_load_3 => kernel_conv1_load_3_reg_701,
        kernel_conv1_load_4 => kernel_conv1_load_4_reg_706,
        kernel_conv1_load_5 => kernel_conv1_load_5_reg_711,
        kernel_conv1_load_6 => kernel_conv1_load_6_reg_716,
        kernel_conv1_load_7 => kernel_conv1_load_7_reg_721,
        kernel_conv1_load_8 => kernel_conv1_load_8_reg_726,
        bias_conv1_load => bias_conv1_load_reg_681,
        output_conv1 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_output_conv1,
        output_conv1_ap_vld => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_output_conv1_ap_vld,
        line_buffer_0_address0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_0_address0,
        line_buffer_0_ce0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_0_ce0,
        line_buffer_0_q0 => line_buffer_0_q0,
        line_buffer_1_address0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_1_address0,
        line_buffer_1_ce0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_1_ce0,
        line_buffer_1_q0 => line_buffer_1_q0,
        line_buffer_2_address0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_2_address0,
        line_buffer_2_ce0 => grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_2_ce0,
        line_buffer_2_q0 => line_buffer_2_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_ready = ap_const_logic_1)) then 
                    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln44_fu_350_p2 = ap_const_lv1_0))) then 
                    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_ready = ap_const_logic_1)) then 
                    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_86 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i_fu_86 <= add_ln45_fu_560_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_fu_94 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                indvar_flatten_fu_94 <= add_ln44_reg_607;
            end if; 
        end if;
    end process;

    num_ker_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                num_ker_fu_90 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                num_ker_fu_90 <= select_ln44_1_reg_617;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln44_reg_607 <= add_ln44_fu_356_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                bias_conv1_load_reg_681 <= bias_conv1_q0;
                kernel_conv1_load_1_reg_691 <= kernel_conv1_q7;
                kernel_conv1_load_2_reg_696 <= kernel_conv1_q6;
                kernel_conv1_load_3_reg_701 <= kernel_conv1_q5;
                kernel_conv1_load_4_reg_706 <= kernel_conv1_q4;
                kernel_conv1_load_5_reg_711 <= kernel_conv1_q3;
                kernel_conv1_load_6_reg_716 <= kernel_conv1_q2;
                kernel_conv1_load_7_reg_721 <= kernel_conv1_q1;
                kernel_conv1_load_8_reg_726 <= kernel_conv1_q0;
                kernel_conv1_load_reg_686 <= kernel_conv1_q8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bitcast_ln53_reg_599 <= bitcast_ln53_fu_299_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln44_fu_350_p2 = ap_const_lv1_0))) then
                icmp_ln56_reg_677 <= icmp_ln56_fu_554_p2;
                or_ln49_reg_672 <= or_ln49_fu_537_p2;
                select_ln44_1_reg_617 <= select_ln44_1_fu_411_p3;
                select_ln44_reg_612 <= select_ln44_fu_371_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                line_buffer_0_load_1_reg_746 <= line_buffer_0_q0;
                line_buffer_0_load_reg_731 <= line_buffer_0_q1;
                line_buffer_1_load_1_reg_751 <= line_buffer_1_q0;
                line_buffer_1_load_reg_736 <= line_buffer_1_q1;
                line_buffer_2_load_1_reg_756 <= line_buffer_2_q0;
                line_buffer_2_load_reg_741 <= line_buffer_2_q1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln44_fu_350_p2, icmp_ln56_reg_677, ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_done, ap_CS_fsm_state7, ap_block_state7_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln44_fu_350_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_done = ap_const_logic_1) and (icmp_ln56_reg_677 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_done = ap_const_logic_1) and (icmp_ln56_reg_677 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln44_1_fu_437_p2 <= std_logic_vector(unsigned(select_ln44_2_fu_424_p3) + unsigned(ap_const_lv8_1));
    add_ln44_2_fu_448_p2 <= std_logic_vector(unsigned(select_ln44_2_fu_424_p3) + unsigned(ap_const_lv8_2));
    add_ln44_3_fu_459_p2 <= std_logic_vector(unsigned(select_ln44_2_fu_424_p3) + unsigned(ap_const_lv8_3));
    add_ln44_4_fu_470_p2 <= std_logic_vector(unsigned(select_ln44_2_fu_424_p3) + unsigned(ap_const_lv8_4));
    add_ln44_5_fu_481_p2 <= std_logic_vector(unsigned(select_ln44_2_fu_424_p3) + unsigned(ap_const_lv8_5));
    add_ln44_6_fu_492_p2 <= std_logic_vector(unsigned(select_ln44_2_fu_424_p3) + unsigned(ap_const_lv8_6));
    add_ln44_7_fu_503_p2 <= std_logic_vector(unsigned(select_ln44_2_fu_424_p3) + unsigned(ap_const_lv8_7));
    add_ln44_8_fu_514_p2 <= std_logic_vector(unsigned(select_ln44_2_fu_424_p3) + unsigned(ap_const_lv8_8));
    add_ln44_9_fu_379_p2 <= std_logic_vector(unsigned(num_ker_fu_90) + unsigned(ap_const_lv5_1));
    add_ln44_fu_356_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_94) + unsigned(ap_const_lv9_1));
    add_ln45_fu_560_p2 <= std_logic_vector(unsigned(select_ln44_reg_612) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_done)
    begin
        if ((grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(ap_block_state7_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state7_on_subcall_done)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(icmp_ln56_reg_677, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_done)
    begin
                ap_block_state7_on_subcall_done <= ((grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_done = ap_const_logic_0) and (icmp_ln56_reg_677 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln44_fu_350_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln44_fu_350_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln44_fu_350_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln44_fu_350_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bias_conv1_address0 <= zext_ln44_2_fu_419_p1(4 - 1 downto 0);

    bias_conv1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            bias_conv1_ce0 <= ap_const_logic_1;
        else 
            bias_conv1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln53_fu_299_p1 <= p_read;
    cmp11_fu_525_p2 <= "1" when (select_ln44_fu_371_p3 = ap_const_lv5_0) else "0";
    cmp13_fu_531_p2 <= "1" when (select_ln44_fu_371_p3 = ap_const_lv5_1D) else "0";
    empty_20_fu_344_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_340_p1) + unsigned(zext_ln44_fu_324_p1));
    empty_22_fu_389_p1 <= add_ln44_9_fu_379_p2(4 - 1 downto 0);
    empty_fu_328_p1 <= num_ker_fu_90(4 - 1 downto 0);
    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_ap_start_reg;
    grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_ap_start_reg;
    icmp_ln44_fu_350_p2 <= "1" when (indvar_flatten_fu_94 = ap_const_lv9_1E0) else "0";
    icmp_ln45_fu_365_p2 <= "1" when (i_fu_86 = ap_const_lv5_1E) else "0";
    icmp_ln56_fu_554_p2 <= "1" when (tmp_fu_544_p4 = ap_const_lv4_0) else "0";
    kernel_conv1_address0 <= zext_ln44_11_fu_520_p1(8 - 1 downto 0);
    kernel_conv1_address1 <= zext_ln44_10_fu_509_p1(8 - 1 downto 0);
    kernel_conv1_address2 <= zext_ln44_9_fu_498_p1(8 - 1 downto 0);
    kernel_conv1_address3 <= zext_ln44_8_fu_487_p1(8 - 1 downto 0);
    kernel_conv1_address4 <= zext_ln44_7_fu_476_p1(8 - 1 downto 0);
    kernel_conv1_address5 <= zext_ln44_6_fu_465_p1(8 - 1 downto 0);
    kernel_conv1_address6 <= zext_ln44_5_fu_454_p1(8 - 1 downto 0);
    kernel_conv1_address7 <= zext_ln44_4_fu_443_p1(8 - 1 downto 0);
    kernel_conv1_address8 <= zext_ln44_3_fu_432_p1(8 - 1 downto 0);

    kernel_conv1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce0 <= ap_const_logic_1;
        else 
            kernel_conv1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_conv1_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce1 <= ap_const_logic_1;
        else 
            kernel_conv1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_conv1_ce2_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce2 <= ap_const_logic_1;
        else 
            kernel_conv1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_conv1_ce3_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce3 <= ap_const_logic_1;
        else 
            kernel_conv1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_conv1_ce4_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce4 <= ap_const_logic_1;
        else 
            kernel_conv1_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_conv1_ce5_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce5 <= ap_const_logic_1;
        else 
            kernel_conv1_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_conv1_ce6_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce6 <= ap_const_logic_1;
        else 
            kernel_conv1_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_conv1_ce7_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce7 <= ap_const_logic_1;
        else 
            kernel_conv1_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_conv1_ce8_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_conv1_ce8 <= ap_const_logic_1;
        else 
            kernel_conv1_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_address0_assign_proc : process(icmp_ln56_reg_677, ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_address0, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_0_address0, ap_CS_fsm_state7, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_0_address0 <= ap_const_lv5_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln56_reg_677 = ap_const_lv1_0))) then 
            line_buffer_0_address0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_0_address0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_address0;
        else 
            line_buffer_0_address0 <= "XXXXX";
        end if; 
    end process;


    line_buffer_0_ce0_assign_proc : process(icmp_ln56_reg_677, ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_ce0, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_0_ce0, ap_CS_fsm_state7, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln56_reg_677 = ap_const_lv1_0))) then 
            line_buffer_0_ce0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_0_ce0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_ce0;
        else 
            line_buffer_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_we0_assign_proc : process(ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_0_we0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_0_we0;
        else 
            line_buffer_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_address0_assign_proc : process(icmp_ln56_reg_677, ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_address0, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_1_address0, ap_CS_fsm_state7, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_1_address0 <= ap_const_lv5_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln56_reg_677 = ap_const_lv1_0))) then 
            line_buffer_1_address0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_1_address0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_address0;
        else 
            line_buffer_1_address0 <= "XXXXX";
        end if; 
    end process;


    line_buffer_1_address1_assign_proc : process(ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_address1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_1_address1 <= ap_const_lv5_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_1_address1 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_address1;
        else 
            line_buffer_1_address1 <= "XXXXX";
        end if; 
    end process;


    line_buffer_1_ce0_assign_proc : process(icmp_ln56_reg_677, ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_ce0, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_1_ce0, ap_CS_fsm_state7, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln56_reg_677 = ap_const_lv1_0))) then 
            line_buffer_1_ce0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_1_ce0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_ce0;
        else 
            line_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_ce1_assign_proc : process(ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_1_ce1 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_ce1;
        else 
            line_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_we0_assign_proc : process(ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_1_we0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_1_we0;
        else 
            line_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_address0_assign_proc : process(icmp_ln56_reg_677, ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_address0, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_2_address0, ap_CS_fsm_state7, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_2_address0 <= ap_const_lv5_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln56_reg_677 = ap_const_lv1_0))) then 
            line_buffer_2_address0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_2_address0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_address0;
        else 
            line_buffer_2_address0 <= "XXXXX";
        end if; 
    end process;


    line_buffer_2_ce0_assign_proc : process(icmp_ln56_reg_677, ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_ce0, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_2_ce0, ap_CS_fsm_state7, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln56_reg_677 = ap_const_lv1_0))) then 
            line_buffer_2_ce0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_line_buffer_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_2_ce0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_ce0;
        else 
            line_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_2_ce1 <= ap_const_logic_1;
        else 
            line_buffer_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_we0_assign_proc : process(ap_CS_fsm_state3, grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            line_buffer_2_we0 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_VITIS_LOOP_46_3_fu_259_line_buffer_2_we0;
        else 
            line_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln49_fu_537_p2 <= (cmp13_fu_531_p2 or cmp11_fu_525_p2);
    output_conv1 <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_output_conv1;
    output_conv1_ap_vld <= grp_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right_fu_271_output_conv1_ap_vld;
    p_mid1_fu_405_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_401_p1) + unsigned(zext_ln44_1_fu_385_p1));
    p_shl_cast_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_332_p3),8));
    p_shl_cast_mid1_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_393_p3),8));
    p_shl_fu_332_p3 <= (empty_fu_328_p1 & ap_const_lv3_0);
    p_shl_mid1_fu_393_p3 <= (empty_22_fu_389_p1 & ap_const_lv3_0);
    select_ln44_1_fu_411_p3 <= 
        add_ln44_9_fu_379_p2 when (icmp_ln45_fu_365_p2(0) = '1') else 
        num_ker_fu_90;
    select_ln44_2_fu_424_p3 <= 
        p_mid1_fu_405_p2 when (icmp_ln45_fu_365_p2(0) = '1') else 
        empty_20_fu_344_p2;
    select_ln44_fu_371_p3 <= 
        ap_const_lv5_0 when (icmp_ln45_fu_365_p2(0) = '1') else 
        i_fu_86;
    tmp_fu_544_p4 <= select_ln44_fu_371_p3(4 downto 1);
    zext_ln44_10_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_7_fu_503_p2),64));
    zext_ln44_11_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_8_fu_514_p2),64));
    zext_ln44_1_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_9_fu_379_p2),8));
    zext_ln44_2_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_1_fu_411_p3),64));
    zext_ln44_3_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_2_fu_424_p3),64));
    zext_ln44_4_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_1_fu_437_p2),64));
    zext_ln44_5_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_2_fu_448_p2),64));
    zext_ln44_6_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_3_fu_459_p2),64));
    zext_ln44_7_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_4_fu_470_p2),64));
    zext_ln44_8_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_5_fu_481_p2),64));
    zext_ln44_9_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln44_6_fu_492_p2),64));
    zext_ln44_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(num_ker_fu_90),8));
end behav;
