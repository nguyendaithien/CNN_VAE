// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        line_buffer_2_load_2,
        line_buffer_2_load_1,
        line_buffer_1_load_2,
        line_buffer_1_load_1,
        line_buffer_0_load_1,
        line_buffer_0_load,
        kernel_conv1_load,
        kernel_conv1_load_1,
        kernel_conv1_load_2,
        kernel_conv1_load_3,
        kernel_conv1_load_4,
        kernel_conv1_load_5,
        kernel_conv1_load_6,
        kernel_conv1_load_7,
        kernel_conv1_load_8,
        bias_conv1_load,
        output_conv1,
        output_conv1_ap_vld,
        line_buffer_0_address0,
        line_buffer_0_ce0,
        line_buffer_0_q0,
        line_buffer_1_address0,
        line_buffer_1_ce0,
        line_buffer_1_q0,
        line_buffer_2_address0,
        line_buffer_2_ce0,
        line_buffer_2_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] line_buffer_2_load_2;
input  [63:0] line_buffer_2_load_1;
input  [63:0] line_buffer_1_load_2;
input  [63:0] line_buffer_1_load_1;
input  [63:0] line_buffer_0_load_1;
input  [63:0] line_buffer_0_load;
input  [63:0] kernel_conv1_load;
input  [63:0] kernel_conv1_load_1;
input  [63:0] kernel_conv1_load_2;
input  [63:0] kernel_conv1_load_3;
input  [63:0] kernel_conv1_load_4;
input  [63:0] kernel_conv1_load_5;
input  [63:0] kernel_conv1_load_6;
input  [63:0] kernel_conv1_load_7;
input  [63:0] kernel_conv1_load_8;
input  [63:0] bias_conv1_load;
output  [63:0] output_conv1;
output   output_conv1_ap_vld;
output  [4:0] line_buffer_0_address0;
output   line_buffer_0_ce0;
input  [63:0] line_buffer_0_q0;
output  [4:0] line_buffer_1_address0;
output   line_buffer_1_ce0;
input  [63:0] line_buffer_1_q0;
output  [4:0] line_buffer_2_address0;
output   line_buffer_2_ce0;
input  [63:0] line_buffer_2_q0;

reg ap_idle;
reg output_conv1_ap_vld;
reg line_buffer_0_ce0;
reg line_buffer_1_ce0;
reg line_buffer_2_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln68_fu_374_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln68_reg_605;
reg   [0:0] icmp_ln68_reg_605_pp0_iter1_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter2_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter3_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter4_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter5_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter6_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter7_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter8_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter9_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter10_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter11_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter12_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter13_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter14_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter15_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter16_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter17_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter18_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter19_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter20_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter21_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter22_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter23_reg;
reg   [0:0] icmp_ln68_reg_605_pp0_iter24_reg;
wire   [63:0] p_cast4_fu_392_p1;
reg   [63:0] p_cast4_reg_609;
reg   [63:0] p_cast4_reg_609_pp0_iter1_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter2_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter3_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter4_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter5_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter6_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter7_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter8_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter9_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter10_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter11_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter12_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter13_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter14_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter15_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter16_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter17_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter18_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter19_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter20_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter21_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter22_reg;
reg   [63:0] p_cast4_reg_609_pp0_iter23_reg;
reg   [63:0] line_buffer_0_load_2_reg_630;
wire   [63:0] grp_fu_295_p2;
reg   [63:0] mul_reg_635;
wire   [63:0] grp_fu_299_p2;
reg   [63:0] mul_0_1_reg_640;
reg   [63:0] mul_0_1_reg_640_pp0_iter5_reg;
reg   [63:0] mul_0_1_reg_640_pp0_iter6_reg;
reg   [63:0] mul_0_1_reg_640_pp0_iter7_reg;
reg   [63:0] mul_0_1_reg_640_pp0_iter8_reg;
wire   [63:0] grp_fu_303_p2;
reg   [63:0] mul_0_2_reg_645;
reg   [63:0] mul_0_2_reg_645_pp0_iter6_reg;
reg   [63:0] mul_0_2_reg_645_pp0_iter7_reg;
reg   [63:0] mul_0_2_reg_645_pp0_iter8_reg;
reg   [63:0] mul_0_2_reg_645_pp0_iter9_reg;
reg   [63:0] mul_0_2_reg_645_pp0_iter10_reg;
reg   [63:0] mul_0_2_reg_645_pp0_iter11_reg;
reg   [63:0] mul_0_2_reg_645_pp0_iter12_reg;
wire   [63:0] grp_fu_254_p2;
reg   [63:0] sum_1_reg_650;
wire   [63:0] grp_fu_259_p2;
reg   [63:0] sum_1_0_1_reg_660;
reg   [63:0] line_buffer_1_load_reg_675;
wire   [63:0] grp_fu_263_p2;
reg   [63:0] sum_1_0_2_reg_680;
wire   [63:0] grp_fu_307_p2;
reg   [63:0] mul_1_reg_685;
wire   [63:0] grp_fu_311_p2;
reg   [63:0] mul_1_1_reg_690;
reg   [63:0] mul_1_1_reg_690_pp0_iter17_reg;
reg   [63:0] mul_1_1_reg_690_pp0_iter18_reg;
reg   [63:0] mul_1_1_reg_690_pp0_iter19_reg;
reg   [63:0] mul_1_1_reg_690_pp0_iter20_reg;
wire   [63:0] grp_fu_315_p2;
reg   [63:0] mul_1_2_reg_695;
reg   [63:0] mul_1_2_reg_695_pp0_iter18_reg;
reg   [63:0] mul_1_2_reg_695_pp0_iter19_reg;
reg   [63:0] mul_1_2_reg_695_pp0_iter20_reg;
reg   [63:0] mul_1_2_reg_695_pp0_iter21_reg;
reg   [63:0] mul_1_2_reg_695_pp0_iter22_reg;
reg   [63:0] mul_1_2_reg_695_pp0_iter23_reg;
reg   [63:0] mul_1_2_reg_695_pp0_iter24_reg;
wire   [63:0] grp_fu_267_p2;
reg   [63:0] sum_1_1_reg_700;
wire   [63:0] grp_fu_271_p2;
reg   [63:0] sum_1_1_1_reg_710;
reg   [63:0] line_buffer_2_load_reg_725;
wire   [63:0] grp_fu_275_p2;
reg   [63:0] sum_1_1_2_reg_730;
wire   [63:0] grp_fu_319_p2;
reg   [63:0] mul_2_reg_735;
wire   [63:0] grp_fu_323_p2;
reg   [63:0] mul_2_1_reg_740;
reg   [63:0] mul_2_1_reg_740_pp0_iter29_reg;
reg   [63:0] mul_2_1_reg_740_pp0_iter30_reg;
reg   [63:0] mul_2_1_reg_740_pp0_iter31_reg;
reg   [63:0] mul_2_1_reg_740_pp0_iter32_reg;
wire   [63:0] grp_fu_327_p2;
reg   [63:0] mul_2_2_reg_745;
reg   [63:0] mul_2_2_reg_745_pp0_iter30_reg;
reg   [63:0] mul_2_2_reg_745_pp0_iter31_reg;
reg   [63:0] mul_2_2_reg_745_pp0_iter32_reg;
reg   [63:0] mul_2_2_reg_745_pp0_iter33_reg;
reg   [63:0] mul_2_2_reg_745_pp0_iter34_reg;
reg   [63:0] mul_2_2_reg_745_pp0_iter35_reg;
reg   [63:0] mul_2_2_reg_745_pp0_iter36_reg;
wire   [63:0] grp_fu_279_p2;
reg   [63:0] sum_1_2_reg_750;
wire   [63:0] grp_fu_283_p2;
reg   [63:0] sum_1_2_1_reg_755;
wire   [63:0] grp_fu_287_p2;
reg   [63:0] sum_1_2_2_reg_760;
wire   [63:0] grp_fu_291_p2;
reg   [63:0] sum_reg_765;
reg   [63:0] sum_reg_765_pp0_iter45_reg;
reg    ap_condition_exit_pp0_iter25_stage0;
wire    ap_block_pp0_stage0;
reg   [4:0] b_fu_84;
wire   [4:0] add_ln68_fu_380_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_b_1;
reg   [63:0] window_buffer_load_0_fu_88;
reg   [63:0] window_buffer_load_13_fu_92;
reg   [63:0] window_buffer_load_24_fu_96;
reg   [63:0] window_buffer_load_1_0_fu_100;
reg   [63:0] window_buffer_load_1_1_fu_104;
reg   [63:0] window_buffer_load_1_2_fu_108;
wire    ap_block_pp0_stage0_01001;
wire   [4:0] empty_19_fu_386_p2;
wire   [63:0] bitcast_ln15_fu_456_p1;
wire   [10:0] tmp_fu_459_p4;
wire   [51:0] trunc_ln15_fu_469_p1;
wire   [0:0] icmp_ln15_1_fu_479_p2;
wire   [0:0] icmp_ln15_fu_473_p2;
wire   [0:0] or_ln15_fu_485_p2;
wire   [0:0] grp_fu_331_p2;
wire   [0:0] and_ln15_fu_491_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_done_reg = 1'b0;
end

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_reg_635),
    .din1(64'd0),
    .ce(1'b1),
    .dout(grp_fu_254_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_reg_650),
    .din1(mul_0_1_reg_640_pp0_iter8_reg),
    .ce(1'b1),
    .dout(grp_fu_259_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_0_1_reg_660),
    .din1(mul_0_2_reg_645_pp0_iter12_reg),
    .ce(1'b1),
    .dout(grp_fu_263_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_0_2_reg_680),
    .din1(mul_1_reg_685),
    .ce(1'b1),
    .dout(grp_fu_267_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_1_reg_700),
    .din1(mul_1_1_reg_690_pp0_iter20_reg),
    .ce(1'b1),
    .dout(grp_fu_271_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_1_1_reg_710),
    .din1(mul_1_2_reg_695_pp0_iter24_reg),
    .ce(1'b1),
    .dout(grp_fu_275_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_1_2_reg_730),
    .din1(mul_2_reg_735),
    .ce(1'b1),
    .dout(grp_fu_279_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_2_reg_750),
    .din1(mul_2_1_reg_740_pp0_iter32_reg),
    .ce(1'b1),
    .dout(grp_fu_283_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_2_1_reg_755),
    .din1(mul_2_2_reg_745_pp0_iter36_reg),
    .ce(1'b1),
    .dout(grp_fu_287_p2)
);

CNN_dadd_64ns_64ns_64_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_4_full_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_2_2_reg_760),
    .din1(bias_conv1_load),
    .ce(1'b1),
    .dout(grp_fu_291_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_0_fu_88),
    .din1(kernel_conv1_load),
    .ce(1'b1),
    .dout(grp_fu_295_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_1_0_fu_100),
    .din1(kernel_conv1_load_1),
    .ce(1'b1),
    .dout(grp_fu_299_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(line_buffer_0_load_2_reg_630),
    .din1(kernel_conv1_load_2),
    .ce(1'b1),
    .dout(grp_fu_303_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_13_fu_92),
    .din1(kernel_conv1_load_3),
    .ce(1'b1),
    .dout(grp_fu_307_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_1_1_fu_104),
    .din1(kernel_conv1_load_4),
    .ce(1'b1),
    .dout(grp_fu_311_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(line_buffer_1_load_reg_675),
    .din1(kernel_conv1_load_5),
    .ce(1'b1),
    .dout(grp_fu_315_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_24_fu_96),
    .din1(kernel_conv1_load_6),
    .ce(1'b1),
    .dout(grp_fu_319_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(window_buffer_load_1_2_fu_108),
    .din1(kernel_conv1_load_7),
    .ce(1'b1),
    .dout(grp_fu_323_p2)
);

CNN_dmul_64ns_64ns_64_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_4_max_dsp_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(line_buffer_2_load_reg_725),
    .din1(kernel_conv1_load_8),
    .ce(1'b1),
    .dout(grp_fu_327_p2)
);

CNN_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_reg_765),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_331_p2)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter45_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter25_stage0)) begin
            ap_enable_reg_pp0_iter26 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln68_fu_374_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            b_fu_84 <= add_ln68_fu_380_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            b_fu_84 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            window_buffer_load_0_fu_88 <= line_buffer_0_load;
        end else if (((icmp_ln68_reg_605 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            window_buffer_load_0_fu_88 <= window_buffer_load_1_0_fu_100;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            window_buffer_load_13_fu_92 <= line_buffer_1_load_1;
        end else if (((ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln68_reg_605_pp0_iter12_reg == 1'd0))) begin
            window_buffer_load_13_fu_92 <= window_buffer_load_1_1_fu_104;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            window_buffer_load_1_0_fu_100 <= line_buffer_0_load_1;
        end else if (((icmp_ln68_reg_605 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            window_buffer_load_1_0_fu_100 <= line_buffer_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            window_buffer_load_1_1_fu_104 <= line_buffer_1_load_2;
        end else if (((ap_enable_reg_pp0_iter13 == 1'b1) & (icmp_ln68_reg_605_pp0_iter12_reg == 1'd0))) begin
            window_buffer_load_1_1_fu_104 <= line_buffer_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            window_buffer_load_1_2_fu_108 <= line_buffer_2_load_2;
        end else if (((ap_enable_reg_pp0_iter25 == 1'b1) & (icmp_ln68_reg_605_pp0_iter24_reg == 1'd0))) begin
            window_buffer_load_1_2_fu_108 <= line_buffer_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            window_buffer_load_24_fu_96 <= line_buffer_2_load_1;
        end else if (((ap_enable_reg_pp0_iter25 == 1'b1) & (icmp_ln68_reg_605_pp0_iter24_reg == 1'd0))) begin
            window_buffer_load_24_fu_96 <= window_buffer_load_1_2_fu_108;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln68_reg_605_pp0_iter10_reg <= icmp_ln68_reg_605_pp0_iter9_reg;
        icmp_ln68_reg_605_pp0_iter11_reg <= icmp_ln68_reg_605_pp0_iter10_reg;
        icmp_ln68_reg_605_pp0_iter12_reg <= icmp_ln68_reg_605_pp0_iter11_reg;
        icmp_ln68_reg_605_pp0_iter13_reg <= icmp_ln68_reg_605_pp0_iter12_reg;
        icmp_ln68_reg_605_pp0_iter14_reg <= icmp_ln68_reg_605_pp0_iter13_reg;
        icmp_ln68_reg_605_pp0_iter15_reg <= icmp_ln68_reg_605_pp0_iter14_reg;
        icmp_ln68_reg_605_pp0_iter16_reg <= icmp_ln68_reg_605_pp0_iter15_reg;
        icmp_ln68_reg_605_pp0_iter17_reg <= icmp_ln68_reg_605_pp0_iter16_reg;
        icmp_ln68_reg_605_pp0_iter18_reg <= icmp_ln68_reg_605_pp0_iter17_reg;
        icmp_ln68_reg_605_pp0_iter19_reg <= icmp_ln68_reg_605_pp0_iter18_reg;
        icmp_ln68_reg_605_pp0_iter20_reg <= icmp_ln68_reg_605_pp0_iter19_reg;
        icmp_ln68_reg_605_pp0_iter21_reg <= icmp_ln68_reg_605_pp0_iter20_reg;
        icmp_ln68_reg_605_pp0_iter22_reg <= icmp_ln68_reg_605_pp0_iter21_reg;
        icmp_ln68_reg_605_pp0_iter23_reg <= icmp_ln68_reg_605_pp0_iter22_reg;
        icmp_ln68_reg_605_pp0_iter24_reg <= icmp_ln68_reg_605_pp0_iter23_reg;
        icmp_ln68_reg_605_pp0_iter2_reg <= icmp_ln68_reg_605_pp0_iter1_reg;
        icmp_ln68_reg_605_pp0_iter3_reg <= icmp_ln68_reg_605_pp0_iter2_reg;
        icmp_ln68_reg_605_pp0_iter4_reg <= icmp_ln68_reg_605_pp0_iter3_reg;
        icmp_ln68_reg_605_pp0_iter5_reg <= icmp_ln68_reg_605_pp0_iter4_reg;
        icmp_ln68_reg_605_pp0_iter6_reg <= icmp_ln68_reg_605_pp0_iter5_reg;
        icmp_ln68_reg_605_pp0_iter7_reg <= icmp_ln68_reg_605_pp0_iter6_reg;
        icmp_ln68_reg_605_pp0_iter8_reg <= icmp_ln68_reg_605_pp0_iter7_reg;
        icmp_ln68_reg_605_pp0_iter9_reg <= icmp_ln68_reg_605_pp0_iter8_reg;
        mul_0_1_reg_640_pp0_iter5_reg <= mul_0_1_reg_640;
        mul_0_1_reg_640_pp0_iter6_reg <= mul_0_1_reg_640_pp0_iter5_reg;
        mul_0_1_reg_640_pp0_iter7_reg <= mul_0_1_reg_640_pp0_iter6_reg;
        mul_0_1_reg_640_pp0_iter8_reg <= mul_0_1_reg_640_pp0_iter7_reg;
        mul_0_2_reg_645_pp0_iter10_reg <= mul_0_2_reg_645_pp0_iter9_reg;
        mul_0_2_reg_645_pp0_iter11_reg <= mul_0_2_reg_645_pp0_iter10_reg;
        mul_0_2_reg_645_pp0_iter12_reg <= mul_0_2_reg_645_pp0_iter11_reg;
        mul_0_2_reg_645_pp0_iter6_reg <= mul_0_2_reg_645;
        mul_0_2_reg_645_pp0_iter7_reg <= mul_0_2_reg_645_pp0_iter6_reg;
        mul_0_2_reg_645_pp0_iter8_reg <= mul_0_2_reg_645_pp0_iter7_reg;
        mul_0_2_reg_645_pp0_iter9_reg <= mul_0_2_reg_645_pp0_iter8_reg;
        mul_1_1_reg_690_pp0_iter17_reg <= mul_1_1_reg_690;
        mul_1_1_reg_690_pp0_iter18_reg <= mul_1_1_reg_690_pp0_iter17_reg;
        mul_1_1_reg_690_pp0_iter19_reg <= mul_1_1_reg_690_pp0_iter18_reg;
        mul_1_1_reg_690_pp0_iter20_reg <= mul_1_1_reg_690_pp0_iter19_reg;
        mul_1_2_reg_695_pp0_iter18_reg <= mul_1_2_reg_695;
        mul_1_2_reg_695_pp0_iter19_reg <= mul_1_2_reg_695_pp0_iter18_reg;
        mul_1_2_reg_695_pp0_iter20_reg <= mul_1_2_reg_695_pp0_iter19_reg;
        mul_1_2_reg_695_pp0_iter21_reg <= mul_1_2_reg_695_pp0_iter20_reg;
        mul_1_2_reg_695_pp0_iter22_reg <= mul_1_2_reg_695_pp0_iter21_reg;
        mul_1_2_reg_695_pp0_iter23_reg <= mul_1_2_reg_695_pp0_iter22_reg;
        mul_1_2_reg_695_pp0_iter24_reg <= mul_1_2_reg_695_pp0_iter23_reg;
        mul_2_1_reg_740 <= grp_fu_323_p2;
        mul_2_1_reg_740_pp0_iter29_reg <= mul_2_1_reg_740;
        mul_2_1_reg_740_pp0_iter30_reg <= mul_2_1_reg_740_pp0_iter29_reg;
        mul_2_1_reg_740_pp0_iter31_reg <= mul_2_1_reg_740_pp0_iter30_reg;
        mul_2_1_reg_740_pp0_iter32_reg <= mul_2_1_reg_740_pp0_iter31_reg;
        mul_2_2_reg_745 <= grp_fu_327_p2;
        mul_2_2_reg_745_pp0_iter30_reg <= mul_2_2_reg_745;
        mul_2_2_reg_745_pp0_iter31_reg <= mul_2_2_reg_745_pp0_iter30_reg;
        mul_2_2_reg_745_pp0_iter32_reg <= mul_2_2_reg_745_pp0_iter31_reg;
        mul_2_2_reg_745_pp0_iter33_reg <= mul_2_2_reg_745_pp0_iter32_reg;
        mul_2_2_reg_745_pp0_iter34_reg <= mul_2_2_reg_745_pp0_iter33_reg;
        mul_2_2_reg_745_pp0_iter35_reg <= mul_2_2_reg_745_pp0_iter34_reg;
        mul_2_2_reg_745_pp0_iter36_reg <= mul_2_2_reg_745_pp0_iter35_reg;
        mul_2_reg_735 <= grp_fu_319_p2;
        p_cast4_reg_609_pp0_iter10_reg[4 : 0] <= p_cast4_reg_609_pp0_iter9_reg[4 : 0];
        p_cast4_reg_609_pp0_iter11_reg[4 : 0] <= p_cast4_reg_609_pp0_iter10_reg[4 : 0];
        p_cast4_reg_609_pp0_iter12_reg[4 : 0] <= p_cast4_reg_609_pp0_iter11_reg[4 : 0];
        p_cast4_reg_609_pp0_iter13_reg[4 : 0] <= p_cast4_reg_609_pp0_iter12_reg[4 : 0];
        p_cast4_reg_609_pp0_iter14_reg[4 : 0] <= p_cast4_reg_609_pp0_iter13_reg[4 : 0];
        p_cast4_reg_609_pp0_iter15_reg[4 : 0] <= p_cast4_reg_609_pp0_iter14_reg[4 : 0];
        p_cast4_reg_609_pp0_iter16_reg[4 : 0] <= p_cast4_reg_609_pp0_iter15_reg[4 : 0];
        p_cast4_reg_609_pp0_iter17_reg[4 : 0] <= p_cast4_reg_609_pp0_iter16_reg[4 : 0];
        p_cast4_reg_609_pp0_iter18_reg[4 : 0] <= p_cast4_reg_609_pp0_iter17_reg[4 : 0];
        p_cast4_reg_609_pp0_iter19_reg[4 : 0] <= p_cast4_reg_609_pp0_iter18_reg[4 : 0];
        p_cast4_reg_609_pp0_iter20_reg[4 : 0] <= p_cast4_reg_609_pp0_iter19_reg[4 : 0];
        p_cast4_reg_609_pp0_iter21_reg[4 : 0] <= p_cast4_reg_609_pp0_iter20_reg[4 : 0];
        p_cast4_reg_609_pp0_iter22_reg[4 : 0] <= p_cast4_reg_609_pp0_iter21_reg[4 : 0];
        p_cast4_reg_609_pp0_iter23_reg[4 : 0] <= p_cast4_reg_609_pp0_iter22_reg[4 : 0];
        p_cast4_reg_609_pp0_iter2_reg[4 : 0] <= p_cast4_reg_609_pp0_iter1_reg[4 : 0];
        p_cast4_reg_609_pp0_iter3_reg[4 : 0] <= p_cast4_reg_609_pp0_iter2_reg[4 : 0];
        p_cast4_reg_609_pp0_iter4_reg[4 : 0] <= p_cast4_reg_609_pp0_iter3_reg[4 : 0];
        p_cast4_reg_609_pp0_iter5_reg[4 : 0] <= p_cast4_reg_609_pp0_iter4_reg[4 : 0];
        p_cast4_reg_609_pp0_iter6_reg[4 : 0] <= p_cast4_reg_609_pp0_iter5_reg[4 : 0];
        p_cast4_reg_609_pp0_iter7_reg[4 : 0] <= p_cast4_reg_609_pp0_iter6_reg[4 : 0];
        p_cast4_reg_609_pp0_iter8_reg[4 : 0] <= p_cast4_reg_609_pp0_iter7_reg[4 : 0];
        p_cast4_reg_609_pp0_iter9_reg[4 : 0] <= p_cast4_reg_609_pp0_iter8_reg[4 : 0];
        sum_1_1_2_reg_730 <= grp_fu_275_p2;
        sum_1_2_1_reg_755 <= grp_fu_283_p2;
        sum_1_2_2_reg_760 <= grp_fu_287_p2;
        sum_1_2_reg_750 <= grp_fu_279_p2;
        sum_reg_765 <= grp_fu_291_p2;
        sum_reg_765_pp0_iter45_reg <= sum_reg_765;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln68_reg_605 <= icmp_ln68_fu_374_p2;
        icmp_ln68_reg_605_pp0_iter1_reg <= icmp_ln68_reg_605;
        p_cast4_reg_609_pp0_iter1_reg[4 : 0] <= p_cast4_reg_609[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_0_load_2_reg_630 <= line_buffer_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_1_load_reg_675 <= line_buffer_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter24_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_2_load_reg_725 <= line_buffer_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_0_1_reg_640 <= grp_fu_299_p2;
        mul_reg_635 <= grp_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_0_2_reg_645 <= grp_fu_303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_1_1_reg_690 <= grp_fu_311_p2;
        mul_1_reg_685 <= grp_fu_307_p2;
        sum_1_0_2_reg_680 <= grp_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_1_2_reg_695 <= grp_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_374_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_cast4_reg_609[4 : 0] <= p_cast4_fu_392_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_1_0_1_reg_660 <= grp_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_1_1_1_reg_710 <= grp_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_1_1_reg_700 <= grp_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_605_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_1_reg_650 <= grp_fu_254_p2;
    end
end

always @ (*) begin
    if (((icmp_ln68_fu_374_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (icmp_ln68_reg_605_pp0_iter24_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter25_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter25_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter45_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_b_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_b_1 = b_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_0_ce0 = 1'b1;
    end else begin
        line_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_1_ce0 = 1'b1;
    end else begin
        line_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_2_ce0 = 1'b1;
    end else begin
        line_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter46 == 1'b1))) begin
        output_conv1_ap_vld = 1'b1;
    end else begin
        output_conv1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln68_fu_380_p2 = (ap_sig_allocacmp_b_1 + 5'd1);

assign and_ln15_fu_491_p2 = (or_ln15_fu_485_p2 & grp_fu_331_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln15_fu_456_p1 = sum_reg_765_pp0_iter45_reg;

assign empty_19_fu_386_p2 = (ap_sig_allocacmp_b_1 + 5'd2);

assign icmp_ln15_1_fu_479_p2 = ((trunc_ln15_fu_469_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_473_p2 = ((tmp_fu_459_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_374_p2 = ((ap_sig_allocacmp_b_1 == 5'd28) ? 1'b1 : 1'b0);

assign line_buffer_0_address0 = p_cast4_fu_392_p1;

assign line_buffer_1_address0 = p_cast4_reg_609_pp0_iter11_reg;

assign line_buffer_2_address0 = p_cast4_reg_609_pp0_iter23_reg;

assign or_ln15_fu_485_p2 = (icmp_ln15_fu_473_p2 | icmp_ln15_1_fu_479_p2);

assign output_conv1 = ((and_ln15_fu_491_p2[0:0] == 1'b1) ? bitcast_ln15_fu_456_p1 : 64'd0);

assign p_cast4_fu_392_p1 = empty_19_fu_386_p2;

assign tmp_fu_459_p4 = {{bitcast_ln15_fu_456_p1[62:52]}};

assign trunc_ln15_fu_469_p1 = bitcast_ln15_fu_456_p1[51:0];

always @ (posedge ap_clk) begin
    p_cast4_reg_609[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter4_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter5_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter6_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter7_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter8_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter9_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter10_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter11_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter12_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter13_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter14_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter15_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter16_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter17_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter18_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter19_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter20_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter21_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter22_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    p_cast4_reg_609_pp0_iter23_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //CNN_convolution_double_double_double_double_28_28_1_16_28_28_3_3_1_1_Pipeline_Shift_win_right
